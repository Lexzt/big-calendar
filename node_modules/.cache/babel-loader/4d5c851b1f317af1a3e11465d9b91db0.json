{"ast":null,"code":"import _toConsumableArray from \"/Users/sham/big-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/sham/big-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/sham/big-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sham/big-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/sham/big-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sham/big-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sham/big-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sham/big-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sham/big-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sham/big-calendar/src/components/react-calendar-view.js\";\nimport React from \"react\";\nimport BigCalendar from \"react-big-calendar\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport moment from \"moment\";\nimport Modal from 'react-modal';\nimport './react-calendar-view.css';\nimport getDb from '../db';\nvar localizer = BigCalendar.momentLocalizer(moment);\nvar DragAndDropCalendar = withDragAndDrop(BigCalendar);\nvar customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\n\nvar ReactCalendarView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ReactCalendarView, _React$Component);\n\n  function ReactCalendarView(props) {\n    var _this;\n\n    _classCallCheck(this, ReactCalendarView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReactCalendarView).call(this, props));\n    _this.getDataFromDb =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var db, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getDb();\n\n            case 2:\n              db = _context.sent;\n              data = [];\n              _context.next = 6;\n              return db.events.find().exec().then(function (events) {\n                data = events.map(function (singleEvent) {\n                  return {\n                    end: singleEvent.end.dateTime,\n                    start: singleEvent.start.dateTime,\n                    title: singleEvent.summary\n                  };\n                });\n              });\n\n            case 6:\n              return _context.abrupt(\"return\", data);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.authorizeOutLookCodeRequest = function () {} //return BASE_URL + PARAMS_URL;\n    // Calendar Event Functions\n    ;\n\n    _this.moveEventList = function (_ref2) {\n      var event = _ref2.event,\n          start = _ref2.start,\n          end = _ref2.end;\n      var events = _this.props.events;\n      var idx = events.indexOf(event);\n\n      var updatedEvent = _objectSpread({}, event, {\n        start: start,\n        end: end\n      });\n\n      var nextEvents = _toConsumableArray(events);\n\n      nextEvents.splice(idx, 1, updatedEvent);\n\n      _this.props.updateEvents(nextEvents);\n    };\n\n    _this.resizeEvent = function (resizeType, _ref3) {\n      var event = _ref3.event,\n          start = _ref3.start,\n          end = _ref3.end;\n      var events = _this.props.events;\n      var nextEvents = events.map(function (existingEvent) {\n        return existingEvent.id === event.id ? _objectSpread({}, existingEvent, {\n          start: start,\n          end: end\n        }) : existingEvent;\n      });\n\n      _this.props.updateEvents(nextEvents);\n    };\n\n    _this.handleSelectDate = function (_ref4) {\n      var start = _ref4.start,\n          end = _ref4.end;\n\n      _this.props.history.push(\"/\".concat(start, \"/$\").concat(end));\n    };\n\n    _this.handleEventClick = function (event) {\n      _this.setState({\n        isShowEvent: true,\n        currentEvent: event,\n        currentEventStartDateTime: moment(event.start).format(\"D, MMMM YYYY, h:mm a\"),\n        currentEventEndDateTime: moment(event.end).format(\"D, MMMM Do YYYY, h:mm a\")\n      });\n    };\n\n    _this.closeModal = function () {\n      _this.setState({\n        isShowEvent: false\n      });\n    };\n\n    _this.renderCalendar = function () {\n      return React.createElement(DragAndDropCalendar, {\n        selectable: true,\n        localizer: localizer,\n        events: _this.props.events,\n        onEventDrop: _this.moveEventList,\n        onEventResize: _this.resizeEvent,\n        onSelectSlot: _this.handleSelectDate,\n        onSelectEvent: function onSelectEvent(event) {\n          return _this.handleEventClick(event);\n        },\n        popup: true,\n        resizable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      });\n    };\n\n    _this.renderEventPopup = function () {\n      return React.createElement(Modal, {\n        isOpen: _this.state.isShowEvent,\n        onAfterOpen: _this.afterOpenModal,\n        onRequestClose: _this.closeModal,\n        style: customStyles,\n        contentLabel: \"Event Modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        ref: function ref(subtitle) {\n          return _this.subtitle = subtitle;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, _this.state.currentEvent.title), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, _this.state.currentEventStartDateTime, \" - \", _this.state.currentEventEndDateTime), React.createElement(\"button\", {\n        onClick: _this.close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"close\"));\n    };\n\n    _this.renderSignupLinks = function () {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: _this.authorizeOutLookCodeRequest(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-block btn-social\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-outlook\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), \"Sign in with Outlook\")), React.createElement(\"button\", {\n        className: \"btn btn-block btn-social\",\n        onClick: function onClick() {\n          return _this.props.beginGetGoogleEvents();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-google\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), \"Get Google Events\"));\n    };\n\n    _this.state = {\n      currentEvent: '',\n      isShowEvent: false,\n      currentEventStartDateTime: '',\n      currentEventEndDateTime: ''\n    };\n    return _this;\n  }\n\n  _createClass(ReactCalendarView, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      // For the modal third party library\n      Modal.setAppElement('body');\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.props.beginGoogleAuth();\n                data = this.getDataFromDb();\n\n                if (data.size > 0) {\n                  this.props.updateEvents(data);\n                }\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, this.renderSignupLinks(), this.renderEventPopup(), this.renderCalendar());\n    }\n  }]);\n\n  return ReactCalendarView;\n}(React.Component);\n\nexport { ReactCalendarView as default };","map":{"version":3,"sources":["/Users/sham/big-calendar/src/components/react-calendar-view.js"],"names":["React","BigCalendar","withDragAndDrop","moment","Modal","getDb","localizer","momentLocalizer","DragAndDropCalendar","customStyles","content","top","left","right","bottom","marginRight","transform","ReactCalendarView","props","getDataFromDb","db","data","events","find","exec","then","map","singleEvent","end","dateTime","start","title","summary","authorizeOutLookCodeRequest","moveEventList","event","idx","indexOf","updatedEvent","nextEvents","splice","updateEvents","resizeEvent","resizeType","existingEvent","id","handleSelectDate","history","push","handleEventClick","setState","isShowEvent","currentEvent","currentEventStartDateTime","format","currentEventEndDateTime","closeModal","renderCalendar","renderEventPopup","state","afterOpenModal","subtitle","close","renderSignupLinks","beginGetGoogleEvents","setAppElement","beginGoogleAuth","size","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport BigCalendar from \"react-big-calendar\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport moment from \"moment\";\nimport Modal from 'react-modal';\nimport './react-calendar-view.css';\nimport getDb from '../db';\n\nconst localizer = BigCalendar.momentLocalizer(moment);\nconst DragAndDropCalendar = withDragAndDrop(BigCalendar);\n\nconst customStyles = {\n  content : {\n    top                   : '50%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)'\n  }\n};\n\nexport default class ReactCalendarView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentEvent: '',\n      isShowEvent: false,\n      currentEventStartDateTime: '',\n      currentEventEndDateTime: ''\n    };\n  }\n\n  componentWillMount() {\n    // For the modal third party library\n    Modal.setAppElement('body');\n  }\n\n  async componentDidMount() {\n    this.props.beginGoogleAuth();\n    const data = this.getDataFromDb();\n    if(data.size > 0) {\n      this.props.updateEvents(data);\n    }\n  }\n\n getDataFromDb = async () => {\n    const db = await getDb();\n    let data = [];\n    await db.events.find().exec().then(events => {\n        data = events.map(singleEvent => {\n          return {\n            end: singleEvent.end.dateTime,\n            start: singleEvent.start.dateTime,\n            title: singleEvent.summary,\n          }\n        });\n      });\n    return data;\n  }\n\n  // Outlook OAuth Functions\n\n  authorizeOutLookCodeRequest = () => {\n    //return BASE_URL + PARAMS_URL;\n  }\n\n\n  // Calendar Event Functions\n\n  moveEventList = ({ event, start, end }) => {\n      const events = this.props.events;\n\n      const idx = events.indexOf(event);\n      const updatedEvent = { ...event, start, end };\n\n      const nextEvents = [...events];\n      nextEvents.splice(idx, 1, updatedEvent);\n      this.props.updateEvents(nextEvents);\n  }\n\n  resizeEvent = (resizeType, { event, start, end }) => {\n    const events = this.props.events;\n\n    const nextEvents = events.map(existingEvent => {\n      return existingEvent.id === event.id\n        ? { ...existingEvent, start, end }\n        : existingEvent;\n    });\n    this.props.updateEvents(nextEvents);\n  }\n\n  handleSelectDate = ({ start, end }) => {\n    this.props.history.push(`/${start}/$${end}`);\n\n  }\n\n  handleEventClick = (event) => {\n    this.setState({\n      isShowEvent: true,\n      currentEvent: event,\n      currentEventStartDateTime: moment(event.start).format(\"D, MMMM YYYY, h:mm a\"),\n      currentEventEndDateTime: moment(event.end).format(\"D, MMMM Do YYYY, h:mm a\"),\n    })\n  }\n\n  closeModal = () => {\n    this.setState({\n      isShowEvent: false\n    })\n  }\n\n\n  /* Render functions */\n\n  renderCalendar = () => {\n    return (\n      <DragAndDropCalendar\n        selectable\n        localizer={localizer}\n        events={this.props.events}\n        onEventDrop={this.moveEventList}\n        onEventResize={this.resizeEvent}\n        onSelectSlot={this.handleSelectDate}\n        onSelectEvent={(event) => this.handleEventClick(event)}\n        popup\n        resizable\n      />\n    )\n  }\n  renderEventPopup = () => {\n    return (\n      <Modal\n       isOpen={this.state.isShowEvent}\n       onAfterOpen={this.afterOpenModal}\n       onRequestClose={this.closeModal}\n       style={customStyles}\n       contentLabel=\"Event Modal\" >\n        <h2 ref={subtitle => this.subtitle = subtitle}>{this.state.currentEvent.title}</h2>\n        <h4>{this.state.currentEventStartDateTime} - {this.state.currentEventEndDateTime}</h4>\n        <button onClick={this.close}>close</button>\n      </Modal>\n    )\n  }\n\n  renderSignupLinks = () => {\n    return (\n      <div>\n         <a href={this.authorizeOutLookCodeRequest()}>\n          <button className=\"btn btn-block btn-social\">\n            <span className=\"fa fa-outlook\"></span>\n              Sign in with Outlook\n            </button>\n          </a>\n          <button className=\"btn btn-block btn-social\"\n                  onClick={() => this.props.beginGetGoogleEvents()}>\n            <span className=\"fa fa-google\"></span>\n              Get Google Events\n          </button>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <>\n      {this.renderSignupLinks()}\n      {this.renderEventPopup()}\n      {this.renderCalendar()}\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
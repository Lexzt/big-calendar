{"ast":null,"code":"import _toConsumableArray from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Sameenhaja/big-calendar/src/react-calendar-view.js\";\nimport React from \"react\";\nimport BigCalendar from \"react-big-calendar\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport moment from \"moment\";\nimport Modal from 'react-modal';\nimport { withRouter } from 'react-router-dom';\nimport { updateEvents as _updateEvents, getEvents as _getEvents } from './redux/actions';\nimport { connect } from 'react-redux';\nimport './react-calendar-view.css';\nvar localizer = BigCalendar.momentLocalizer(moment);\nvar DragAndDropCalendar = withDragAndDrop(BigCalendar);\nvar CALENDAR_ID = 'shamsheer619@gmail.com';\nvar CLIENT_ID = '65724758895-gc7lubjkjsqqddfhlb7jcme80i3mjqn0.apps.googleusercontent.com';\nvar API_KEY = 'AIzaSyCTYXWtoRKnXeZkPCcZwYOXm0Qz3Lz9F9g';\nvar SCOPE = \"https://www.googleapis.com/auth/calendar.events\";\nvar GoogleAuth;\nvar customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\n\nvar ReactCalendarView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ReactCalendarView, _React$Component);\n\n  function ReactCalendarView(props) {\n    var _this;\n\n    _classCallCheck(this, ReactCalendarView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReactCalendarView).call(this, props));\n\n    _this.moveEventList = function (_ref) {\n      var event = _ref.event,\n          start = _ref.start,\n          end = _ref.end;\n      var events = _this.props.events;\n      var idx = events.indexOf(event);\n\n      var updatedEvent = _objectSpread({}, event, {\n        start: start,\n        end: end\n      });\n\n      var nextEvents = _toConsumableArray(events);\n\n      nextEvents.splice(idx, 1, updatedEvent);\n\n      _this.props.updateEvents(nextEvents);\n    };\n\n    _this.resizeEvent = function (resizeType, _ref2) {\n      var event = _ref2.event,\n          start = _ref2.start,\n          end = _ref2.end;\n      var events = _this.props.events;\n      var nextEvents = events.map(function (existingEvent) {\n        return existingEvent.id === event.id ? _objectSpread({}, existingEvent, {\n          start: start,\n          end: end\n        }) : existingEvent;\n      });\n\n      _this.props.updateEvents(nextEvents);\n    };\n\n    _this.handleSelectDate = function (_ref3) {\n      var start = _ref3.start,\n          end = _ref3.end;\n\n      _this.props.history.push(\"/\".concat(start, \"/$\").concat(end));\n    };\n\n    _this.handleEventClick = function (event) {\n      _this.setState({\n        isShowEvent: true,\n        currentEvent: event,\n        currentEventStartDateTime: moment(event.start).format(\"D, MMMM YYYY, h:mm a\"),\n        currentEventEndDateTime: moment(event.end).format(\"D, MMMM Do YYYY, h:mm a\")\n      });\n    };\n\n    _this.close = function () {\n      _this.setState({\n        isShowEvent: false\n      });\n    };\n\n    _this.afterOpenModal = function () {// references are now sync'd and can be accessed.\n    };\n\n    _this.state = {\n      currentEvent: '',\n      isShowEvent: false,\n      currentEventStartDateTime: ''\n    };\n    return _this;\n  }\n\n  _createClass(ReactCalendarView, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      Modal.setAppElement('body');\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      handleClientLoad();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(Modal, {\n        isOpen: this.state.isShowEvent,\n        onAfterOpen: this.afterOpenModal,\n        onRequestClose: this.close,\n        style: customStyles,\n        contentLabel: \"Example Modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        ref: function ref(subtitle) {\n          return _this2.subtitle = subtitle;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, this.state.currentEvent.title), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, this.state.currentEventStartDateTime, \" - \", this.state.currentEventEndDateTime), React.createElement(\"button\", {\n        onClick: this.close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"close\")), React.createElement(DragAndDropCalendar, {\n        selectable: true,\n        localizer: localizer,\n        events: this.props.events,\n        onEventDrop: this.moveEventList,\n        onEventResize: this.resizeEvent,\n        onSelectSlot: this.handleSelectDate,\n        onSelectEvent: function onSelectEvent(event) {\n          return _this2.handleEventClick(event);\n        },\n        popup: true,\n        resizable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ReactCalendarView;\n}(React.Component);\n\nfunction initClient() {\n  window.gapi.auth2.init({\n    'apiKey': API_KEY,\n    'clientId': CLIENT_ID,\n    'scope': SCOPE,\n    'discoveryDocs': ['https://www.googleapis.com/discovery/v1/apis/drive/v3/rest'],\n    'ux_mode': 'redirect',\n    'redirect_uri': 'http://localhost:3000/callback'\n  }).then(function () {\n    GoogleAuth = window.gapi.auth2.getAuthInstance(); // Listen for sign-in state changes.\n\n    GoogleAuth.isSignedIn.listen(updateSigninStatus); // Handle initial sign-in state. (Determine if user is already signed in)\n\n    var user = GoogleAuth.currentUser.get();\n    window.gapi.auth2.init({\n      'client_id': CLIENT_ID,\n      'ux_mode': 'redirect',\n      'redirect_uri': 'http://localhost:3000/callback'\n    }).then(function () {});\n  });\n}\n\nfunction revokeAccess() {\n  GoogleAuth.disconnect();\n}\n\nfunction handleAuthClick() {\n  if (GoogleAuth.isSignedIn.get()) {\n    // User is authorized and has clicked 'Sign out' button.\n    GoogleAuth.signOut();\n  } else {\n    // User is not signed in. Start Google auth flow.\n    GoogleAuth.signIn();\n  }\n}\n\nfunction updateSigninStatus(isSignedIn) {\n  setSigninStatus();\n}\n\nfunction setSigninStatus(isSignedIn) {\n  var user = GoogleAuth.currentUser.get();\n  var isAuthorized = user.hasGrantedScopes(SCOPE);\n\n  if (isAuthorized) {\n    console.log(\"Authorized\");\n  } else {\n    console.log(\"Not authorized\");\n  }\n}\n\nvar pageToken = null;\n\nfunction makeApiCall() {\n  var request = window.gapi.client.request({\n    'path': \"https://www.googleapis.com/calendar/v3/calendars/\".concat(CALENDAR_ID, \"/events\")\n  }); // Execute the API request.\n\n  request.execute(function (response) {\n    console.log(response);\n  });\n}\n\nfunction handleClientLoad() {\n  window.gapi.load('client:auth2', initClient);\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    events: state.events\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateEvents: function updateEvents(nextEvents) {\n      return dispatch(_updateEvents(nextEvents));\n    },\n    getEvents: function getEvents() {\n      return dispatch(_getEvents());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ReactCalendarView));","map":{"version":3,"sources":["/Users/Sameenhaja/big-calendar/src/react-calendar-view.js"],"names":["React","BigCalendar","withDragAndDrop","moment","Modal","withRouter","updateEvents","getEvents","connect","localizer","momentLocalizer","DragAndDropCalendar","CALENDAR_ID","CLIENT_ID","API_KEY","SCOPE","GoogleAuth","customStyles","content","top","left","right","bottom","marginRight","transform","ReactCalendarView","props","moveEventList","event","start","end","events","idx","indexOf","updatedEvent","nextEvents","splice","resizeEvent","resizeType","map","existingEvent","id","handleSelectDate","history","push","handleEventClick","setState","isShowEvent","currentEvent","currentEventStartDateTime","format","currentEventEndDateTime","close","afterOpenModal","state","setAppElement","handleClientLoad","subtitle","title","Component","initClient","window","gapi","auth2","init","then","getAuthInstance","isSignedIn","listen","updateSigninStatus","user","currentUser","get","revokeAccess","disconnect","handleAuthClick","signOut","signIn","setSigninStatus","isAuthorized","hasGrantedScopes","console","log","pageToken","makeApiCall","request","client","execute","response","load","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport BigCalendar from \"react-big-calendar\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport moment from \"moment\";\nimport Modal from 'react-modal';\nimport { withRouter } from 'react-router-dom';\nimport { updateEvents, getEvents } from './redux/actions';\nimport { connect } from 'react-redux';\nimport './react-calendar-view.css';\n\nconst localizer = BigCalendar.momentLocalizer(moment);\nconst DragAndDropCalendar = withDragAndDrop(BigCalendar);\n\nconst CALENDAR_ID = 'shamsheer619@gmail.com';\nconst CLIENT_ID = '65724758895-gc7lubjkjsqqddfhlb7jcme80i3mjqn0.apps.googleusercontent.com';\nconst API_KEY = 'AIzaSyCTYXWtoRKnXeZkPCcZwYOXm0Qz3Lz9F9g';\nconst SCOPE = `https://www.googleapis.com/auth/calendar.events`;\n\nvar GoogleAuth;\n\n\nconst customStyles = {\n  content : {\n    top                   : '50%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)'\n  }\n};\n\nclass ReactCalendarView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentEvent: '',\n      isShowEvent: false,\n      currentEventStartDateTime: ''\n    };\n  }\n\n  componentWillMount() {\n    Modal.setAppElement('body');\n\n  }\n\n  componentDidMount() {\n    handleClientLoad();\n  }\n\n  moveEventList = ({ event, start, end }) => {\n      const events = this.props.events;\n\n      const idx = events.indexOf(event);\n      const updatedEvent = { ...event, start, end };\n\n      const nextEvents = [...events];\n      nextEvents.splice(idx, 1, updatedEvent);\n      this.props.updateEvents(nextEvents);\n  }\n\n  resizeEvent = (resizeType, { event, start, end }) => {\n    const events = this.props.events;\n\n    const nextEvents = events.map(existingEvent => {\n      return existingEvent.id === event.id\n        ? { ...existingEvent, start, end }\n        : existingEvent;\n    });\n    this.props.updateEvents(nextEvents);\n  }\n\n  handleSelectDate = ({ start, end }) => {\n    this.props.history.push(`/${start}/$${end}`);\n  }\n\n  handleEventClick = (event) => {\n    this.setState({\n      isShowEvent: true,\n      currentEvent: event,\n      currentEventStartDateTime: moment(event.start).format(\"D, MMMM YYYY, h:mm a\"),\n      currentEventEndDateTime: moment(event.end).format(\"D, MMMM Do YYYY, h:mm a\"),\n    })\n  }\n\n  close = () => {\n    this.setState({\n      isShowEvent: false\n    })\n  }\n\n  afterOpenModal = () => {\n    // references are now sync'd and can be accessed.\n  }\n\n  render() {\n    return (\n      <>\n      <Modal\n          isOpen={this.state.isShowEvent}\n          onAfterOpen={this.afterOpenModal}\n          onRequestClose={this.close}\n          style={customStyles}\n          contentLabel=\"Example Modal\"\n        >\n          <h2 ref={subtitle => this.subtitle = subtitle}>{this.state.currentEvent.title}</h2>\n          <h4>{this.state.currentEventStartDateTime} - {this.state.currentEventEndDateTime}</h4>\n          <button onClick={this.close}>close</button>\n        </Modal>\n      <DragAndDropCalendar\n        selectable\n        localizer={localizer}\n        events={this.props.events}\n        onEventDrop={this.moveEventList}\n        onEventResize={this.resizeEvent}\n        onSelectSlot={this.handleSelectDate}\n        onSelectEvent={(event) => this.handleEventClick(event)}\n        popup\n        resizable\n      />\n      </>\n    );\n  }\n}\n\nfunction initClient() {\n  window.gapi.auth2.init({\n      'apiKey': API_KEY,\n      'clientId': CLIENT_ID,\n      'scope': SCOPE,\n      'discoveryDocs': ['https://www.googleapis.com/discovery/v1/apis/drive/v3/rest'],\n      'ux_mode': 'redirect',\n      'redirect_uri' : 'http://localhost:3000/callback'\n  }).then(function () {\n      GoogleAuth = window.gapi.auth2.getAuthInstance();\n\n      // Listen for sign-in state changes.\n      GoogleAuth.isSignedIn.listen(updateSigninStatus);\n\n\n      // Handle initial sign-in state. (Determine if user is already signed in)\n      var user = GoogleAuth.currentUser.get();\n      window.gapi.auth2.init({\n        'client_id' : CLIENT_ID,\n        'ux_mode': 'redirect',\n        'redirect_uri' : 'http://localhost:3000/callback'\n      }).then(function() {\n\n      })\n  })\n}\n\n\n\nfunction revokeAccess() {\n  GoogleAuth.disconnect();\n}\n\nfunction handleAuthClick() {\n  if (GoogleAuth.isSignedIn.get()) {\n      // User is authorized and has clicked 'Sign out' button.\n      GoogleAuth.signOut();\n  } else {\n      // User is not signed in. Start Google auth flow.\n      GoogleAuth.signIn();\n    }\n}\n\nfunction updateSigninStatus(isSignedIn) {\n  setSigninStatus();\n}\n\nfunction setSigninStatus(isSignedIn) {\n  var user = GoogleAuth.currentUser.get();\n  var isAuthorized = user.hasGrantedScopes(SCOPE);\n  if (isAuthorized) {\n    console.log(\"Authorized\");\n  } else {\n    console.log(\"Not authorized\");\n  }\n}\n\nconst pageToken = null;\n\nfunction makeApiCall() {\n  var request = window.gapi.client.request({\n    'path': `https://www.googleapis.com/calendar/v3/calendars/${CALENDAR_ID}/events`,\n  });\n\n// Execute the API request.\n  request.execute(function(response) {\n    console.log(response);\n  });\n}\n\n\nfunction handleClientLoad() {\n  window.gapi.load('client:auth2', initClient);\n}\n\nconst mapStateToProps = state => {\n  return {\n    events: state.events,\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateEvents: (nextEvents) => dispatch(updateEvents(nextEvents)),\n  getEvents: () => dispatch(getEvents())\n\n})\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ReactCalendarView));\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createLogger } from 'redux-logger';\nexport var loggerMiddleware = createLogger();\nvar CALENDAR_ID = 'shamsheer619@gmail.com';\n\nvar MicrosoftGraph = require(\"@microsoft/microsoft-graph-client\");\n\nfunction googleCalendarEvents() {\n  return window.gapi.client.request({\n    'path': \"https://www.googleapis.com/calendar/v3/calendars/\".concat(CALENDAR_ID, \"/events\")\n  }).then(function (resp) {\n    var events = resp.result.items;\n    debugger;\n    return events;\n  }, function (reason) {\n    return reason;\n  });\n}\n\nfunction outlookCalendarEvents() {\n  return MicrosoftGraph.Client.init({\n    authProvider: function authProvider(done) {\n      done(null, window.localStorage.getItem('at'));\n    }\n  }).api('/me/events').top(10).select('subject,start,end,createdDatetime').orderby('createdDatetime DESC').get(function (err, res) {\n    if (err) {\n      return err;\n    } else {\n      return res.value;\n    }\n  });\n}\n\nexport var apiMiddleware = function apiMiddleware(store) {\n  return function (next) {\n    return function (action) {\n      if (action.type === 'GET_GOOGLE_EVENTS') {\n        // Cors REQUEST\n        var user = window.gapi.auth2.getAuthInstance().currentUser.get();\n        var oauth_Token = user.getAuthResponse().access_token;\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', 'https://www.googleapis.com/calendar/v3/calendars/shamsheer619@gmail.com/events');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + oauthToken);\n        xhr.send().then(function (resp) {\n          var events = resp.result.items;\n          return next({\n            type: action.type + '_SUCCESS',\n            payload: {\n              data: events\n            }\n          });\n        }, function (reason) {\n          return next({\n            type: action.type + '_FAILURE',\n            payload: {\n              data: reason\n            }\n          });\n        });\n        /*window.gapi.client.request({\n             'path': `https://www.googleapis.com/calendar/v3/calendars/${CALENDAR_ID}/events`,\n           }).then(resp => {\n           let events = resp.result.items;\n           return next({\n             type: action.type + '_SUCCESS',\n             payload: {\n               data: events\n             }\n           });\n         }, (reason) => {\n           return next({\n             type: action.type + '_FAILURE',\n             payload: {\n               data: reason\n             }\n           });\n         });*/\n      }\n\n      if (action.type === 'GET_OUTLOOK_EVENTS') {\n        var value = outlookCalendarEvents();\n        next({\n          type: action.type + '_SUCCESS',\n          payload: {\n            data: value\n          }\n        });\n      }\n\n      return next(action);\n    };\n  };\n};","map":{"version":3,"sources":["/Users/sham/big-calendar/src/redux/middleware.js"],"names":["createLogger","loggerMiddleware","CALENDAR_ID","MicrosoftGraph","require","googleCalendarEvents","window","gapi","client","request","then","resp","events","result","items","reason","outlookCalendarEvents","Client","init","authProvider","done","localStorage","getItem","api","top","select","orderby","get","err","res","value","apiMiddleware","store","next","action","type","user","auth2","getAuthInstance","currentUser","oauth_Token","getAuthResponse","access_token","xhr","XMLHttpRequest","open","setRequestHeader","oauthToken","send","payload","data"],"mappings":"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","sourcesContent":["import { createLogger } from 'redux-logger';\nexport const loggerMiddleware = createLogger();\n\n\nconst CALENDAR_ID = 'shamsheer619@gmail.com';\nconst MicrosoftGraph = require(\"@microsoft/microsoft-graph-client\");\n\nfunction googleCalendarEvents() {\n  return window.gapi.client.request({\n        'path': `https://www.googleapis.com/calendar/v3/calendars/${CALENDAR_ID}/events`,\n      }).then(resp => {\n      let events = resp.result.items;\n      debugger\n      return events;\n    }, (reason) => {\n      return reason;\n    });\n}\n\nfunction outlookCalendarEvents() {\n  return MicrosoftGraph.Client.init({\n    authProvider: (done) => {\n      done(null, window.localStorage.getItem('at'))\n    }\n  }).api('/me/events')\n    .top(10)\n    .select('subject,start,end,createdDatetime')\n    .orderby('createdDatetime DESC')\n    .get((err, res) => {\n      if (err) {\n        return err;\n      } else {\n        return res.value;\n      }\n    });\n}\n\n\nexport const apiMiddleware = store => next => action => {\n  if(action.type === 'GET_GOOGLE_EVENTS') {\n    // Cors REQUEST\n    var user = window.gapi.auth2.getAuthInstance().currentUser.get()\n    var oauth_Token = user.getAuthResponse().access_token;\n    const xhr = new XMLHttpRequest();\n\n    xhr.open('GET',\n      'https://www.googleapis.com/calendar/v3/calendars/shamsheer619@gmail.com/events');\n    xhr.setRequestHeader('Authorization',\n      'Bearer ' + oauthToken);\n    xhr\n    .send()\n    .then(resp => {\n    let events = resp.result.items;\n    return next({\n      type: action.type + '_SUCCESS',\n      payload: {\n        data: events\n        }\n      });\n    }, (reason) => {\n    return next({\n      type: action.type + '_FAILURE',\n      payload: {\n        data: reason\n      }\n    });\n  })\n    /*window.gapi.client.request({\n         'path': `https://www.googleapis.com/calendar/v3/calendars/${CALENDAR_ID}/events`,\n       }).then(resp => {\n       let events = resp.result.items;\n       return next({\n         type: action.type + '_SUCCESS',\n         payload: {\n           data: events\n         }\n       });\n     }, (reason) => {\n       return next({\n         type: action.type + '_FAILURE',\n         payload: {\n           data: reason\n         }\n       });\n     });*/\n\n  }\n  if(action.type === 'GET_OUTLOOK_EVENTS') {\n    const value = outlookCalendarEvents();\n    next({\n      type: action.type + '_SUCCESS',\n      payload: {\n        data: value\n      }\n    })\n  }\n\n  return next(action);\n}\n"]},"metadata":{},"sourceType":"module"}
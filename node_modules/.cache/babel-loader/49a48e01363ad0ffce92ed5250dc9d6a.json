{"ast":null,"code":"var _this = this;\n\nimport { BEGIN_GOOGLE_AUTH, successGoogleAuth } from '../redux/actions'; // import { Observable } from 'rxjs/Observable'; maybe later\n\nvar GOOGLE_CLIENT_ID = '65724758895-gc7lubjkjsqqddfhlb7jcme80i3mjqn0.apps.googleusercontent.com';\nvar API_KEY = 'AIzaSyCTYXWtoRKnXeZkPCcZwYOXm0Qz3Lz9F9g';\nvar GOOGLE_SCOPE = \"https://www.googleapis.com/auth/calendar.events\";\nvar OUTLOOK_CLIENT_ID = '6b770a68-2156-4345-b0aa-d95419e31be1';\nvar BASE_URL = 'https://login.microsoftonline.com/common/oauth2/v2.0/authorize?';\nvar OUTLOOK_SCOPE = 'openid profile Calendars.ReadWrite.Shared';\nvar PARAMS_URL = \"response_type=id_token+token&client_id=\".concat(OUTLOOK_CLIENT_ID, \"\\n                    &redirect_uri=http%3A%2F%2Flocalhost%3A3000%2Foutlook-redirect\\n                    &scope=\").concat(OUTLOOK_SCOPE, \"&state=f175f48d-d277-9893-9c8d-dcc2a95ffe16\\n                    &nonce=593a2b06-d77b-31c2-ae43-e74c0ebeb304\\n                    &response_mode=fragment\");\nvar GoogleAuth;\nexport var beginGoogleAuthEpic = function beginGoogleAuthEpic(action$) {\n  return action$.ofType(BEGIN_GOOGLE_AUTH).map(function () {\n    window.gapi.load('client:auth2', initClient()).then(function () {\n      GoogleAuth = window.gapi.auth2.getAuthInstance();\n      var user = GoogleAuth.currentUser.get();\n      var isAuthorized = user.hasGrantedScopes(GOOGLE_SCOPE);\n\n      if (isAuthorized) {\n        return successGoogleAuth(user);\n      }\n    });\n  });\n};\n\nvar initClient = function initClient() {\n  window.gapi.client.init({\n    'apiKey': API_KEY,\n    'clientId': GOOGLE_CLIENT_ID,\n    'scope': GOOGLE_SCOPE,\n    'discoveryDocs': ['https://www.googleapis.com/discovery/v1/apis/drive/v3/rest']\n  }).then(function () {\n    GoogleAuth = window.gapi.auth2.getAuthInstance();\n    handleAuthClick();\n    GoogleAuth.isSignedIn.listen(updateSigninStatus);\n    setSigninStatus();\n  });\n};\n\nvar handleAuthClick = function handleAuthClick() {\n  if (GoogleAuth.isSignedIn.get()) {\n    GoogleAuth.signOut();\n  } else {\n    GoogleAuth.signIn();\n  }\n};\n\nvar updateSigninStatus = function updateSigninStatus(isSignedIn) {\n  _this.setSigninStatus();\n};\n\nvar setSigninStatus = function setSigninStatus() {\n  var user = GoogleAuth.currentUser.get();\n  var isAuthorized = user.hasGrantedScopes(GOOGLE_SCOPE);\n\n  if (isAuthorized) {\n    console.log(\"Authorized\");\n\n    _this.props.getGoogleEvents();\n  } else {\n    console.log(\"Not authorized\");\n  }\n};","map":{"version":3,"sources":["/Users/sham/big-calendar/src/epics/auth.js"],"names":["BEGIN_GOOGLE_AUTH","successGoogleAuth","GOOGLE_CLIENT_ID","API_KEY","GOOGLE_SCOPE","OUTLOOK_CLIENT_ID","BASE_URL","OUTLOOK_SCOPE","PARAMS_URL","GoogleAuth","beginGoogleAuthEpic","action$","ofType","map","window","gapi","load","initClient","then","auth2","getAuthInstance","user","currentUser","get","isAuthorized","hasGrantedScopes","client","init","handleAuthClick","isSignedIn","listen","updateSigninStatus","setSigninStatus","signOut","signIn","console","log","props","getGoogleEvents"],"mappings":";;AAAA,SAASA,iBAAT,EAA4BC,iBAA5B,QAAqD,kBAArD,C,CACA;;AACA,IAAMC,gBAAgB,GAAG,yEAAzB;AACA,IAAMC,OAAO,GAAG,yCAAhB;AACA,IAAMC,YAAY,oDAAlB;AACA,IAAMC,iBAAiB,GAAG,sCAA1B;AACA,IAAMC,QAAQ,GAAG,iEAAjB;AACA,IAAMC,aAAa,GAAG,2CAAtB;AACA,IAAMC,UAAU,oDAA6CH,iBAA7C,8HAEaE,aAFb,8JAAhB;AAMA,IAAIE,UAAJ;AAGA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,OAAO;AAAA,SAAIA,OAAO,CAACC,MAAR,CAAeZ,iBAAf,EAC3Ca,GAD2C,CACvC,YAAM;AACPC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiCC,UAAU,EAA3C,EACCC,IADD,CACM,YAAM;AACVT,MAAAA,UAAU,GAAGK,MAAM,CAACC,IAAP,CAAYI,KAAZ,CAAkBC,eAAlB,EAAb;AACA,UAAMC,IAAI,GAAGZ,UAAU,CAACa,WAAX,CAAuBC,GAAvB,EAAb;AACA,UAAMC,YAAY,GAAGH,IAAI,CAACI,gBAAL,CAAsBrB,YAAtB,CAArB;;AACA,UAAGoB,YAAH,EAAiB;AACf,eAAOvB,iBAAiB,CAACoB,IAAD,CAAxB;AACD;AACF,KARD;AASH,GAX2C,CAAJ;AAAA,CAAnC;;AAaP,IAAMJ,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBH,EAAAA,MAAM,CAACC,IAAP,CAAYW,MAAZ,CAAmBC,IAAnB,CAAwB;AACpB,cAAUxB,OADU;AAEpB,gBAAYD,gBAFQ;AAGpB,aAASE,YAHW;AAIpB,qBAAiB,CAAC,4DAAD;AAJG,GAAxB,EAKGc,IALH,CAKS,YAAM;AACXT,IAAAA,UAAU,GAAGK,MAAM,CAACC,IAAP,CAAYI,KAAZ,CAAkBC,eAAlB,EAAb;AACAQ,IAAAA,eAAe;AACfnB,IAAAA,UAAU,CAACoB,UAAX,CAAsBC,MAAtB,CAA6BC,kBAA7B;AACAC,IAAAA,eAAe;AAClB,GAVD;AAWD,CAZD;;AAcA,IAAMJ,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,MAAInB,UAAU,CAACoB,UAAX,CAAsBN,GAAtB,EAAJ,EAAiC;AAC7Bd,IAAAA,UAAU,CAACwB,OAAX;AACH,GAFD,MAEO;AACHxB,IAAAA,UAAU,CAACyB,MAAX;AACD;AACJ,CAND;;AAQA,IAAMH,kBAAkB,GAAG,SAArBA,kBAAqB,CAACF,UAAD,EAAgB;AACzC,EAAA,KAAI,CAACG,eAAL;AACD,CAFD;;AAIA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,MAAIX,IAAI,GAAGZ,UAAU,CAACa,WAAX,CAAuBC,GAAvB,EAAX;AACA,MAAIC,YAAY,GAAGH,IAAI,CAACI,gBAAL,CAAsBrB,YAAtB,CAAnB;;AACA,MAAIoB,YAAJ,EAAkB;AAChBW,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;;AACA,IAAA,KAAI,CAACC,KAAL,CAAWC,eAAX;AACD,GAHD,MAGO;AACLH,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;AACF,CATD","sourcesContent":["import { BEGIN_GOOGLE_AUTH, successGoogleAuth } from '../redux/actions';\n// import { Observable } from 'rxjs/Observable'; maybe later\nconst GOOGLE_CLIENT_ID = '65724758895-gc7lubjkjsqqddfhlb7jcme80i3mjqn0.apps.googleusercontent.com';\nconst API_KEY = 'AIzaSyCTYXWtoRKnXeZkPCcZwYOXm0Qz3Lz9F9g';\nconst GOOGLE_SCOPE = `https://www.googleapis.com/auth/calendar.events`;\nconst OUTLOOK_CLIENT_ID = '6b770a68-2156-4345-b0aa-d95419e31be1';\nconst BASE_URL = 'https://login.microsoftonline.com/common/oauth2/v2.0/authorize?';\nconst OUTLOOK_SCOPE = 'openid profile Calendars.ReadWrite.Shared';\nconst PARAMS_URL = `response_type=id_token+token&client_id=${OUTLOOK_CLIENT_ID}\n                    &redirect_uri=http%3A%2F%2Flocalhost%3A3000%2Foutlook-redirect\n                    &scope=${OUTLOOK_SCOPE}&state=f175f48d-d277-9893-9c8d-dcc2a95ffe16\n                    &nonce=593a2b06-d77b-31c2-ae43-e74c0ebeb304\n                    &response_mode=fragment`;\n\nvar GoogleAuth;\n\n\nexport const beginGoogleAuthEpic = action$ => action$.ofType(BEGIN_GOOGLE_AUTH)\n  .map(() => {\n      window.gapi.load('client:auth2', initClient())\n      .then(() => {\n        GoogleAuth = window.gapi.auth2.getAuthInstance()\n        const user = GoogleAuth.currentUser.get();\n        const isAuthorized = user.hasGrantedScopes(GOOGLE_SCOPE);\n        if(isAuthorized) {\n          return successGoogleAuth(user);\n        }\n      })\n  })\n\nconst initClient = () => {\n  window.gapi.client.init({\n      'apiKey': API_KEY,\n      'clientId': GOOGLE_CLIENT_ID,\n      'scope': GOOGLE_SCOPE,\n      'discoveryDocs': ['https://www.googleapis.com/discovery/v1/apis/drive/v3/rest'],\n  }).then( () => {\n      GoogleAuth = window.gapi.auth2.getAuthInstance();\n      handleAuthClick();\n      GoogleAuth.isSignedIn.listen(updateSigninStatus);\n      setSigninStatus();\n  })\n}\n\nconst handleAuthClick = () => {\n  if (GoogleAuth.isSignedIn.get()) {\n      GoogleAuth.signOut();\n  } else {\n      GoogleAuth.signIn();\n    }\n}\n\nconst updateSigninStatus = (isSignedIn) => {\n  this.setSigninStatus();\n}\n\nconst setSigninStatus = () => {\n  var user = GoogleAuth.currentUser.get();\n  var isAuthorized = user.hasGrantedScopes(GOOGLE_SCOPE);\n  if (isAuthorized) {\n    console.log(\"Authorized\");\n    this.props.getGoogleEvents();\n  } else {\n    console.log(\"Not authorized\");\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
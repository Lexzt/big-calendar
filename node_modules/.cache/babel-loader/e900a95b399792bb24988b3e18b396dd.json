{"ast":null,"code":"/**\n * the query-cache makes sure that on every query-state, exactly one instance can exist\n * if you use the same mango-query more then once, it will only search the database once.\n */\nvar QueryCache =\n/*#__PURE__*/\nfunction () {\n  function QueryCache() {\n    this.subs = [];\n    this._map = new Map();\n  }\n  /**\n   * check if an equal query is in the cache,\n   * if true, return the cached one,\n   * if false, save the given one and return it\n   * @param  {RxQuery} query\n   * @return {RxQuery}\n   */\n\n\n  var _proto = QueryCache.prototype;\n\n  _proto.getByQuery = function getByQuery(query) {\n    var stringRep = query.toString();\n    if (!this._map.has(stringRep)) this._map.set(stringRep, query);\n    return this._map.get(stringRep);\n  };\n\n  _proto.destroy = function destroy() {\n    this.subs.forEach(function (sub) {\n      return sub.unsubscribe();\n    });\n    this._map = new Map();\n  };\n\n  return QueryCache;\n}();\n\nexport function create() {\n  return new QueryCache();\n}\nexport default {\n  create: create\n};","map":null,"metadata":{},"sourceType":"module"}
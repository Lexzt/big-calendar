{"ast":null,"code":"import _toConsumableArray from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Sameenhaja/big-calendar/src/react-calendar-view.js\";\nimport React from \"react\";\nimport BigCalendar from \"react-big-calendar\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport moment from \"moment\";\nimport './react-calendar-view.css';\nimport { withRouter } from 'react-router-dom';\nimport 'react-big-calendar/lib/addons/dragAndDrop/styles.less';\nvar localizer = BigCalendar.momentLocalizer(moment);\nvar DragAndDropCalendar = withDragAndDrop(BigCalendar);\n\nvar ReactCalendarView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ReactCalendarView, _React$Component);\n\n  function ReactCalendarView(props) {\n    var _this;\n\n    _classCallCheck(this, ReactCalendarView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReactCalendarView).call(this, props));\n\n    _this.resizeEvent = function (resizeType, _ref) {\n      var event = _ref.event,\n          start = _ref.start,\n          end = _ref.end;\n      var events = _this.props.eventsList;\n      var nextEvents = events.map(function (existingEvent) {\n        return existingEvent.id === event.id ? _objectSpread({}, existingEvent, {\n          start: start,\n          end: end\n        }) : existingEvent;\n      });\n\n      _this.props.pushEventsFromResize(nextEvents);\n    };\n\n    _this.handleSelectDate = function (_ref2) {\n      var start = _ref2.start,\n          end = _ref2.end;\n\n      _this.props.history.push(\"/\".concat(start, \"/$\").concat(end));\n    };\n\n    _this.handleEventClick = function (_ref3) {\n      var event = _ref3.event;\n    };\n\n    _this.state = {\n      events: [{\n        allDay: false,\n        end: new Date('December 10, 2018 11:13:00'),\n        start: new Date('December 09, 2018 12:13:00'),\n        title: 'hi'\n      }, {\n        allDay: true,\n        end: new Date('December 09, 2018 11:13:00'),\n        start: new Date('December 09, 2018 11:13:00'),\n        title: 'All Day Event'\n      }]\n    };\n    _this.moveEvent = _this.moveEvent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ReactCalendarView, [{\n    key: \"moveEvent\",\n    value: function moveEvent(_ref4) {\n      var event = _ref4.event,\n          start = _ref4.start,\n          end = _ref4.end;\n      var events = this.props.eventsList;\n      var idx = events.indexOf(event);\n\n      var updatedEvent = _objectSpread({}, event, {\n        start: start,\n        end: end\n      });\n\n      var nextEvents = _toConsumableArray(events);\n\n      nextEvents.splice(idx, 1, updatedEvent);\n      this.props.pushEventsFromMove(nextEvents);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(DragAndDropCalendar, {\n        selectable: true,\n        localizer: localizer,\n        events: this.props.eventsList,\n        onEventDrop: this.moveEvent,\n        resizable: true,\n        onEventResize: this.resizeEvent,\n        defaultView: BigCalendar.Views.MONTH,\n        onSelectSlot: this.handleSelectDate,\n        onSelectEvent: this.handleEventClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return ReactCalendarView;\n}(React.Component);\n\nexport default withRouter(ReactCalendarView);","map":{"version":3,"sources":["/Users/Sameenhaja/big-calendar/src/react-calendar-view.js"],"names":["React","BigCalendar","withDragAndDrop","moment","withRouter","localizer","momentLocalizer","DragAndDropCalendar","ReactCalendarView","props","resizeEvent","resizeType","event","start","end","events","eventsList","nextEvents","map","existingEvent","id","pushEventsFromResize","handleSelectDate","history","push","handleEventClick","state","allDay","Date","title","moveEvent","bind","idx","indexOf","updatedEvent","splice","pushEventsFromMove","Views","MONTH","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport BigCalendar from \"react-big-calendar\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport moment from \"moment\";\nimport './react-calendar-view.css';\nimport { withRouter } from 'react-router-dom';\nimport 'react-big-calendar/lib/addons/dragAndDrop/styles.less'\n\n\nconst localizer = BigCalendar.momentLocalizer(moment);\nconst DragAndDropCalendar = withDragAndDrop(BigCalendar);\n\nclass ReactCalendarView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      events: [\n        {\n          allDay: false,\n          end: new Date('December 10, 2018 11:13:00'),\n          start: new Date('December 09, 2018 12:13:00'),\n          title: 'hi',\n        },\n        {\n          allDay: true,\n          end: new Date('December 09, 2018 11:13:00'),\n          start: new Date('December 09, 2018 11:13:00'),\n          title: 'All Day Event',\n        }\n      ],\n    };\n\n    this.moveEvent = this.moveEvent.bind(this);\n  }\n\n  moveEvent({ event, start, end }) {\n      const events = this.props.eventsList;\n\n      const idx = events.indexOf(event);\n      const updatedEvent = { ...event, start, end };\n\n      const nextEvents = [...events];\n      nextEvents.splice(idx, 1, updatedEvent);\n\n\n      this.props.pushEventsFromMove(nextEvents);\n  }\n\n  resizeEvent = (resizeType, { event, start, end }) => {\n    const events = this.props.eventsList;\n\n    const nextEvents = events.map(existingEvent => {\n      return existingEvent.id === event.id\n        ? { ...existingEvent, start, end }\n        : existingEvent;\n    });\n\n    this.props.pushEventsFromResize(nextEvents);\n  };\n\n  handleSelectDate = ({ start, end }) => {\n    this.props.history.push(`/${start}/$${end}`);\n  }\n\n  handleEventClick = ({ event }) => {\n    \n  }\n\n  render() {\n    return (\n      <DragAndDropCalendar\n        selectable\n        localizer={localizer}\n        events={this.props.eventsList}\n        onEventDrop={this.moveEvent}\n        resizable\n        onEventResize={this.resizeEvent}\n        defaultView={BigCalendar.Views.MONTH}\n        onSelectSlot={this.handleSelectDate}\n        onSelectEvent={this.handleEventClick}\n      />\n    );\n  }\n}\n\nexport default withRouter(ReactCalendarView);\n"]},"metadata":{},"sourceType":"module"}
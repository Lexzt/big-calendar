{"ast":null,"code":"import { createSelector } from 'reselect';\n\nvar getGoogleEvents = function getGoogleEvents(state) {\n  return state.google_data;\n};\n\nvar getEvents = function getEvents(state) {\n  return state.events;\n}; //process google events data\n\n\nexport var getFilteredEvents = createSelector([getGoogleEvents, getEvents], function (google_events, events) {\n  setFormat(google_events);\n  return events;\n});\n\nfunction setFormat(events) {\n  var formated_events = [];\n  events.forEach(function (eachEvent) {\n    formated_events.push({\n      allDay: false,\n      end: eachEvent.end.date,\n      start: eachEvent.start.date,\n      title: eachEvent.summary\n    });\n  });\n  debugger;\n}","map":{"version":3,"sources":["/Users/sham/big-calendar/src/redux/selectors.js"],"names":["createSelector","getGoogleEvents","state","google_data","getEvents","events","getFilteredEvents","google_events","setFormat","formated_events","forEach","eachEvent","push","allDay","end","date","start","title","summary"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,WAAV;AAAA,CAA7B;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAF,KAAK;AAAA,SAAIA,KAAK,CAACG,MAAV;AAAA,CAAvB,C,CAGA;;;AACA,OAAO,IAAMC,iBAAiB,GAAGN,cAAc,CAC7C,CAACC,eAAD,EAAkBG,SAAlB,CAD6C,EAE7C,UAACG,aAAD,EAAgBF,MAAhB,EAA2B;AACzBG,EAAAA,SAAS,CAACD,aAAD,CAAT;AACA,SAAOF,MAAP;AACD,CAL4C,CAAxC;;AAQP,SAASG,SAAT,CAAmBH,MAAnB,EAA2B;AACzB,MAAMI,eAAe,GAAG,EAAxB;AAEAJ,EAAAA,MAAM,CAACK,OAAP,CAAe,UAAAC,SAAS,EAAI;AAC1BF,IAAAA,eAAe,CAACG,IAAhB,CAAqB;AACnBC,MAAAA,MAAM,EAAE,KADW;AAEnBC,MAAAA,GAAG,EAAEH,SAAS,CAACG,GAAV,CAAcC,IAFA;AAGnBC,MAAAA,KAAK,EAAEL,SAAS,CAACK,KAAV,CAAgBD,IAHJ;AAInBE,MAAAA,KAAK,EAAEN,SAAS,CAACO;AAJE,KAArB;AAMD,GAPD;AAQA;AACD","sourcesContent":["import { createSelector } from 'reselect'\n\nconst getGoogleEvents = state => state.google_data;\nconst getEvents = state => state.events;\n\n\n//process google events data\nexport const getFilteredEvents = createSelector(\n  [getGoogleEvents, getEvents],\n  (google_events, events) => {\n    setFormat(google_events)\n    return events\n  }\n)\n\nfunction setFormat(events) {\n  const formated_events = [];\n\n  events.forEach(eachEvent => {\n    formated_events.push({\n      allDay: false,\n      end: eachEvent.end.date,\n      start: eachEvent.start.date,\n      title: eachEvent.summary,\n    })\n  })\n  debugger\n}\n"]},"metadata":{},"sourceType":"module"}
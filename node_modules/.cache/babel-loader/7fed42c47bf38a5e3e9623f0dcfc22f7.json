{"ast":null,"code":"import { createSelector } from 'reselect';\nimport moment from 'moment';\n\nvar getEvents = function getEvents(state) {\n  return state.events.calEvents;\n}; //process google events data for React Big calendar\n\n\nexport var getFilteredEvents = createSelector([getEvents], function (normalized_data) {\n  debugger;\n  var data = Object.values(normalized_data);\n  var formated_events = data.map(function (eachEvent) {\n    if (eachEvent.end.date === undefined) {\n      return {\n        id: eachEvent.id,\n        title: eachEvent.summary,\n        end: new Date(eachEvent.end.dateTime),\n        start: new Date(eachEvent.start.dateTime)\n      };\n    } else {\n      return {\n        id: eachEvent.id,\n        title: eachEvent.summary,\n        end: new Date(moment(eachEvent.end.date).format()),\n        start: new Date(moment(eachEvent.start.date).format())\n      };\n    }\n  });\n  return formated_events;\n});","map":{"version":3,"sources":["/Users/sham/big-calendar/src/redux/selectors.js"],"names":["createSelector","moment","getEvents","state","events","calEvents","getFilteredEvents","normalized_data","data","Object","values","formated_events","map","eachEvent","end","date","undefined","id","title","summary","Date","dateTime","start","format"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,MAAN,CAAaC,SAAjB;AAAA,CAAvB,C,CAEA;;;AACA,OAAO,IAAMC,iBAAiB,GAAGN,cAAc,CAC7C,CAACE,SAAD,CAD6C,EAE7C,UAACK,eAAD,EAAqB;AACnB;AACA,MAAMC,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAcH,eAAd,CAAb;AACA,MAAMI,eAAe,GAAGH,IAAI,CAC3BI,GADuB,CACnB,UAAAC,SAAS,EAAI;AACd,QAAGA,SAAS,CAACC,GAAV,CAAcC,IAAd,KAAuBC,SAA1B,EAAqC;AACnC,aAAO;AACLC,QAAAA,EAAE,EAAEJ,SAAS,CAACI,EADT;AAELC,QAAAA,KAAK,EAAEL,SAAS,CAACM,OAFZ;AAGLL,QAAAA,GAAG,EAAE,IAAIM,IAAJ,CAASP,SAAS,CAACC,GAAV,CAAcO,QAAvB,CAHA;AAILC,QAAAA,KAAK,EAAE,IAAIF,IAAJ,CAASP,SAAS,CAACS,KAAV,CAAgBD,QAAzB;AAJF,OAAP;AAMD,KAPD,MAQK;AACH,aAAO;AACLJ,QAAAA,EAAE,EAAEJ,SAAS,CAACI,EADT;AAELC,QAAAA,KAAK,EAAEL,SAAS,CAACM,OAFZ;AAGLL,QAAAA,GAAG,EAAG,IAAIM,IAAJ,CAASnB,MAAM,CAACY,SAAS,CAACC,GAAV,CAAcC,IAAf,CAAN,CAA2BQ,MAA3B,EAAT,CAHD;AAILD,QAAAA,KAAK,EAAE,IAAIF,IAAJ,CAASnB,MAAM,CAACY,SAAS,CAACS,KAAV,CAAgBP,IAAjB,CAAN,CAA6BQ,MAA7B,EAAT;AAJF,OAAP;AAMD;AACF,GAlBqB,CAAxB;AAoBA,SAAOZ,eAAP;AACD,CA1B4C,CAAxC","sourcesContent":["import { createSelector } from 'reselect';\nimport moment from 'moment';\n\nconst getEvents = state => state.events.calEvents;\n\n//process google events data for React Big calendar\nexport const getFilteredEvents = createSelector(\n  [getEvents],\n  (normalized_data) => {\n    debugger;\n    const data = Object.values(normalized_data);\n    const formated_events = data\n    .map(eachEvent => {\n        if(eachEvent.end.date === undefined) {\n          return {\n            id: eachEvent.id,\n            title: eachEvent.summary,\n            end: new Date(eachEvent.end.dateTime),\n            start: new Date(eachEvent.start.dateTime)\n          }\n        }\n        else {\n          return {\n            id: eachEvent.id,\n            title: eachEvent.summary,\n            end:  new Date(moment(eachEvent.end.date).format()),\n            start: new Date(moment(eachEvent.start.date).format())\n          }\n        }\n      }\n    );\n    return formated_events\n  }\n)\n"]},"metadata":{},"sourceType":"module"}
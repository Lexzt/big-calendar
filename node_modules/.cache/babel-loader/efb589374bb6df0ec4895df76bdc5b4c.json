{"ast":null,"code":"import _toConsumableArray from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Sameenhaja/big-calendar/src/react-calendar-view.js\";\nimport React from \"react\";\nimport { DragDropContext } from \"react-dnd\";\nimport BigCalendar from \"react-big-calendar\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport moment from \"moment\";\nimport './react-calendar-view.css';\nimport { withRouter } from 'react-router-dom';\nimport CalendarEventForm from './calendar-event-form';\nvar localizer = BigCalendar.momentLocalizer(moment);\nvar DragAndDropCalendar = withDragAndDrop(BigCalendar);\n\nvar ReactCalendarView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ReactCalendarView, _React$Component);\n\n  function ReactCalendarView(props) {\n    var _this;\n\n    _classCallCheck(this, ReactCalendarView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReactCalendarView).call(this, props));\n\n    _this.resizeEvent = function (resizeType, _ref) {\n      var event = _ref.event,\n          start = _ref.start,\n          end = _ref.end;\n      var events = _this.state.events;\n      var nextEvents = events.map(function (existingEvent) {\n        return existingEvent.id === event.id ? _objectSpread({}, existingEvent, {\n          start: start,\n          end: end\n        }) : existingEvent;\n      });\n\n      _this.setState({\n        events: nextEvents\n      });\n    };\n\n    _this.handleSelect = function (_ref2) {\n      var start = _ref2.start,\n          end = _ref2.end;\n      var title = window.prompt('New Event name');\n\n      _this.props.history.push(\"/\".concat(start, \"/\").concat(end));\n    };\n\n    _this.handleSelectSlot = function (_ref3) {\n      var start = _ref3.start,\n          end = _ref3.end;\n      return React.createElement(CalendarEventForm, {\n        start: start,\n        end: end,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      });\n    };\n\n    _this.state = {\n      events: [{\n        allDay: false,\n        end: new Date('December 10, 2018 11:13:00'),\n        start: new Date('December 09, 2018 12:13:00'),\n        title: 'hi'\n      }, {\n        allDay: true,\n        end: new Date('December 09, 2018 11:13:00'),\n        start: new Date('December 09, 2018 11:13:00'),\n        title: 'All Day Event'\n      }]\n    };\n    _this.moveEvent = _this.moveEvent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ReactCalendarView, [{\n    key: \"moveEvent\",\n    value: function moveEvent(_ref4) {\n      var event = _ref4.event,\n          start = _ref4.start,\n          end = _ref4.end;\n      var events = this.state.events;\n      var idx = events.indexOf(event);\n\n      var updatedEvent = _objectSpread({}, event, {\n        start: start,\n        end: end\n      });\n\n      var nextEvents = _toConsumableArray(events);\n\n      nextEvents.splice(idx, 1, updatedEvent);\n      this.setState({\n        events: nextEvents\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(DragAndDropCalendar, {\n        className: \"react-calendar-view\",\n        selectable: true,\n        localizer: localizer,\n        events: this.state.events,\n        onEventDrop: this.moveEvent,\n        resizable: true,\n        onEventResize: this.resizeEvent,\n        defaultView: BigCalendar.Views.MONTH,\n        onSelectSlot: handleSelectSlot,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return ReactCalendarView;\n}(React.Component);\n\nfunction handleSelectSlot(_ref5) {\n  var start = _ref5.start,\n      end = _ref5.end;\n  debugger;\n  return React.createElement(CalendarEventForm, {\n    start: start,\n    end: end,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  });\n}\n\nvar Calendar = DragDropContext(HTML5Backend)(ReactCalendarView);\nexport default withRouter(Calendar);","map":{"version":3,"sources":["/Users/Sameenhaja/big-calendar/src/react-calendar-view.js"],"names":["React","DragDropContext","BigCalendar","HTML5Backend","withDragAndDrop","moment","withRouter","CalendarEventForm","localizer","momentLocalizer","DragAndDropCalendar","ReactCalendarView","props","resizeEvent","resizeType","event","start","end","events","state","nextEvents","map","existingEvent","id","setState","handleSelect","title","window","prompt","history","push","handleSelectSlot","allDay","Date","moveEvent","bind","idx","indexOf","updatedEvent","splice","Views","MONTH","Component","Calendar"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { DragDropContext } from \"react-dnd\";\nimport BigCalendar from \"react-big-calendar\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport moment from \"moment\";\nimport './react-calendar-view.css';\nimport { withRouter } from 'react-router-dom';\nimport CalendarEventForm from './calendar-event-form';\n\n\nconst localizer = BigCalendar.momentLocalizer(moment);\nconst DragAndDropCalendar = withDragAndDrop(BigCalendar);\n\nclass ReactCalendarView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      events: [\n        {\n          allDay: false,\n          end: new Date('December 10, 2018 11:13:00'),\n          start: new Date('December 09, 2018 12:13:00'),\n          title: 'hi',\n        },\n        {\n          allDay: true,\n          end: new Date('December 09, 2018 11:13:00'),\n          start: new Date('December 09, 2018 11:13:00'),\n          title: 'All Day Event',\n        }\n      ]\n    };\n\n    this.moveEvent = this.moveEvent.bind(this);\n  }\n\n  moveEvent({ event, start, end }) {\n      const { events } = this.state;\n\n      const idx = events.indexOf(event);\n      const updatedEvent = { ...event, start, end };\n\n      const nextEvents = [...events];\n      nextEvents.splice(idx, 1, updatedEvent);\n\n      this.setState({\n        events: nextEvents\n      });\n  }\n\n  resizeEvent = (resizeType, { event, start, end }) => {\n    const { events } = this.state;\n\n    const nextEvents = events.map(existingEvent => {\n      return existingEvent.id === event.id\n        ? { ...existingEvent, start, end }\n        : existingEvent;\n    });\n\n    this.setState({\n      events: nextEvents\n    });\n  };\n\n  handleSelect = ({ start, end }) => {\n    const title = window.prompt('New Event name')\n    this.props.history.push(`/${start}/${end}`);\n  }\n\n  handleSelectSlot = ({ start, end}) => {\n    return <CalendarEventForm start={start} end={end}/>\n  }\n\n  render() {\n    return (\n      <DragAndDropCalendar\n        className=\"react-calendar-view\"\n        selectable\n        localizer={localizer}\n        events={this.state.events}\n        onEventDrop={this.moveEvent}\n        resizable\n        onEventResize={this.resizeEvent}\n        defaultView={BigCalendar.Views.MONTH}\n        onSelectSlot={handleSelectSlot}\n      />\n    );\n  }\n}\n\nfunction handleSelectSlot({ start, end}) {\n  debugger\n  return <CalendarEventForm start={start} end={end}/>\n}\n\nconst Calendar = DragDropContext(HTML5Backend)(ReactCalendarView);\n\nexport default withRouter(Calendar);\n"]},"metadata":{},"sourceType":"module"}
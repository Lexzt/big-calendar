{"ast":null,"code":"var CALENDAR_ID = 'shamsheer619@gmail.com';\nvar CLIENT_ID = '65724758895-gc7lubjkjsqqddfhlb7jcme80i3mjqn0.apps.googleusercontent.com';\nvar API_KEY = 'AIzaSyCTYXWtoRKnXeZkPCcZwYOXm0Qz3Lz9F9g';\nvar SCOPE = \"https://www.googleapis.com/auth/calendar.events\";\nvar GoogleAuth;\n\nfunction initClient() {\n  window.gapi.client.init({\n    'apiKey': API_KEY,\n    'clientId': CLIENT_ID,\n    'scope': SCOPE,\n    'discoveryDocs': ['https://www.googleapis.com/discovery/v1/apis/drive/v3/rest']\n  }).then(function () {\n    GoogleAuth = window.gapi.auth2.getAuthInstance(); // Listen for sign-in state changes.\n\n    GoogleAuth.isSignedIn.listen(updateSigninStatus); // Handle initial sign-in state. (Determine if user is already signed in)\n\n    var user = GoogleAuth.currentUser.get();\n    console.log(user);\n  });\n}\n\nfunction revokeAccess() {\n  GoogleAuth.disconnect();\n}\n\nfunction handleAuthClick() {\n  if (GoogleAuth.isSignedIn.get()) {\n    // User is authorized and has clicked 'Sign out' button.\n    GoogleAuth.signOut();\n  } else {\n    // User is not signed in. Start Google auth flow.\n    GoogleAuth.signIn();\n  }\n}\n\nfunction updateSigninStatus(isSignedIn) {\n  setSigninStatus();\n}\n\nfunction setSigninStatus(isSignedIn) {\n  var user = GoogleAuth.currentUser.get();\n  var isAuthorized = user.hasGrantedScopes(SCOPE);\n\n  if (isAuthorized) {\n    console.log(\"Authorized\");\n  } else {\n    console.log(\"Not authorized\");\n  }\n}\n\nvar pageToken = null;\n\nfunction makeApiCall() {\n  var request = window.gapi.client.request({\n    'path': \"https://www.googleapis.com/calendar/v3/calendars/\".concat(CALENDAR_ID, \"/events\")\n  }); // Execute the API request.\n\n  request.execute(function (response) {\n    console.log(response);\n  });\n}\n\nfunction handleClientLoad() {\n  window.gapi.load('client:auth2', initClient);\n}\n\nexport var apiMiddleware = function apiMiddleware(store) {\n  return function (next) {\n    return function (action) {\n      if (action.type === 'GET_EVENTS') {\n        handleClientLoad();\n      }\n\n      return next(action);\n    };\n  };\n};","map":{"version":3,"sources":["/Users/Sameenhaja/big-calendar/src/calendar-components/middlewares/apiMiddleware.jsx"],"names":["CALENDAR_ID","CLIENT_ID","API_KEY","SCOPE","GoogleAuth","initClient","window","gapi","client","init","then","auth2","getAuthInstance","isSignedIn","listen","updateSigninStatus","user","currentUser","get","console","log","revokeAccess","disconnect","handleAuthClick","signOut","signIn","setSigninStatus","isAuthorized","hasGrantedScopes","pageToken","makeApiCall","request","execute","response","handleClientLoad","load","apiMiddleware","store","next","action","type"],"mappings":"AAAA,IAAMA,WAAW,GAAG,wBAApB;AACA,IAAMC,SAAS,GAAG,yEAAlB;AACA,IAAMC,OAAO,GAAG,yCAAhB;AACA,IAAMC,KAAK,oDAAX;AACA,IAAIC,UAAJ;;AAGA,SAASC,UAAT,GAAsB;AACpBC,EAAAA,MAAM,CAACC,IAAP,CAAYC,MAAZ,CAAmBC,IAAnB,CAAwB;AACpB,cAAUP,OADU;AAEpB,gBAAYD,SAFQ;AAGpB,aAASE,KAHW;AAIpB,qBAAiB,CAAC,4DAAD;AAJG,GAAxB,EAKGO,IALH,CAKQ,YAAY;AAChBN,IAAAA,UAAU,GAAGE,MAAM,CAACC,IAAP,CAAYI,KAAZ,CAAkBC,eAAlB,EAAb,CADgB,CAGhB;;AACAR,IAAAA,UAAU,CAACS,UAAX,CAAsBC,MAAtB,CAA6BC,kBAA7B,EAJgB,CAOhB;;AACA,QAAIC,IAAI,GAAGZ,UAAU,CAACa,WAAX,CAAuBC,GAAvB,EAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACH,GAfD;AAgBD;;AAID,SAASK,YAAT,GAAwB;AACtBjB,EAAAA,UAAU,CAACkB,UAAX;AACD;;AAED,SAASC,eAAT,GAA2B;AACzB,MAAInB,UAAU,CAACS,UAAX,CAAsBK,GAAtB,EAAJ,EAAiC;AAC7B;AACAd,IAAAA,UAAU,CAACoB,OAAX;AACH,GAHD,MAGO;AACH;AACApB,IAAAA,UAAU,CAACqB,MAAX;AACD;AACJ;;AAED,SAASV,kBAAT,CAA4BF,UAA5B,EAAwC;AACtCa,EAAAA,eAAe;AAChB;;AAED,SAASA,eAAT,CAAyBb,UAAzB,EAAqC;AACnC,MAAIG,IAAI,GAAGZ,UAAU,CAACa,WAAX,CAAuBC,GAAvB,EAAX;AACA,MAAIS,YAAY,GAAGX,IAAI,CAACY,gBAAL,CAAsBzB,KAAtB,CAAnB;;AACA,MAAIwB,YAAJ,EAAkB;AAChBR,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,GAFD,MAEO;AACLD,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;AACF;;AAED,IAAMS,SAAS,GAAG,IAAlB;;AAEA,SAASC,WAAT,GAAuB;AACrB,MAAIC,OAAO,GAAGzB,MAAM,CAACC,IAAP,CAAYC,MAAZ,CAAmBuB,OAAnB,CAA2B;AACvC,uEAA4D/B,WAA5D;AADuC,GAA3B,CAAd,CADqB,CAKvB;;AACE+B,EAAAA,OAAO,CAACC,OAAR,CAAgB,UAASC,QAAT,EAAmB;AACjCd,IAAAA,OAAO,CAACC,GAAR,CAAYa,QAAZ;AACD,GAFD;AAGD;;AAGD,SAASC,gBAAT,GAA4B;AAC1B5B,EAAAA,MAAM,CAACC,IAAP,CAAY4B,IAAZ,CAAiB,cAAjB,EAAiC9B,UAAjC;AACD;;AAED,OAAO,IAAM+B,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK;AAAA,SAAI,UAAAC,IAAI;AAAA,WAAI,UAAAC,MAAM,EAAI;AACtD,UAAGA,MAAM,CAACC,IAAP,KAAgB,YAAnB,EAAiC;AAC/BN,QAAAA,gBAAgB;AACjB;;AACD,aAAOI,IAAI,CAACC,MAAD,CAAX;AACD,KALyC;AAAA,GAAR;AAAA,CAA3B","sourcesContent":["const CALENDAR_ID = 'shamsheer619@gmail.com';\nconst CLIENT_ID = '65724758895-gc7lubjkjsqqddfhlb7jcme80i3mjqn0.apps.googleusercontent.com';\nconst API_KEY = 'AIzaSyCTYXWtoRKnXeZkPCcZwYOXm0Qz3Lz9F9g';\nconst SCOPE = `https://www.googleapis.com/auth/calendar.events`;\nvar GoogleAuth;\n\n\nfunction initClient() {\n  window.gapi.client.init({\n      'apiKey': API_KEY,\n      'clientId': CLIENT_ID,\n      'scope': SCOPE,\n      'discoveryDocs': ['https://www.googleapis.com/discovery/v1/apis/drive/v3/rest']\n  }).then(function () {\n      GoogleAuth = window.gapi.auth2.getAuthInstance();\n\n      // Listen for sign-in state changes.\n      GoogleAuth.isSignedIn.listen(updateSigninStatus);\n\n\n      // Handle initial sign-in state. (Determine if user is already signed in)\n      var user = GoogleAuth.currentUser.get();\n      console.log(user);\n  })\n}\n\n\n\nfunction revokeAccess() {\n  GoogleAuth.disconnect();\n}\n\nfunction handleAuthClick() {\n  if (GoogleAuth.isSignedIn.get()) {\n      // User is authorized and has clicked 'Sign out' button.\n      GoogleAuth.signOut();\n  } else {\n      // User is not signed in. Start Google auth flow.\n      GoogleAuth.signIn();\n    }\n}\n\nfunction updateSigninStatus(isSignedIn) {\n  setSigninStatus();\n}\n\nfunction setSigninStatus(isSignedIn) {\n  var user = GoogleAuth.currentUser.get();\n  var isAuthorized = user.hasGrantedScopes(SCOPE);\n  if (isAuthorized) {\n    console.log(\"Authorized\");\n  } else {\n    console.log(\"Not authorized\");\n  }\n}\n\nconst pageToken = null;\n\nfunction makeApiCall() {\n  var request = window.gapi.client.request({\n    'path': `https://www.googleapis.com/calendar/v3/calendars/${CALENDAR_ID}/events`,\n  });\n\n// Execute the API request.\n  request.execute(function(response) {\n    console.log(response);\n  });\n}\n\n\nfunction handleClientLoad() {\n  window.gapi.load('client:auth2', initClient);\n}\n\nexport const apiMiddleware = store => next => action => {\n  if(action.type === 'GET_EVENTS') {\n    handleClientLoad();\n  }\n  return next(action);\n}\n"]},"metadata":{},"sourceType":"module"}
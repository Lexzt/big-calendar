{"ast":null,"code":"/*\n * action types\n */\nexport var ADD_NEW_EVENT = 'ADD_NEW_EVENT';\nexport var UPDATE_EVENTS = 'UPDATE_EVENTS';\nexport var GET_GOOGLE_EVENTS_BEGIN = 'GET_GOOGLE_EVENTS_BEGIN';\nexport var GET_GOOGLE_EVENTS_SUCCESS = 'GET_GOOGLE_EVENTS_SUCCESS';\nexport var GET_GOOGLE_EVENTS_FAILURE = 'GET_GOOGLE_EVENTS_FAILURE';\nexport var GET_OUTLOOK_EVENTS = 'GET_OUTLOOK_EVENTS';\nexport var GET_OUTLOOK_EVENTS_SUCCESS = 'GET_OUTLOOK_EVENTS_SUCCESS';\nexport var GET_OUTLOOK_EVENTS_FAILURE = 'GET_OUTLOOK_EVENTS_FAILURE';\nexport var BEGIN_GOOGLE_AUTH = 'BEGIN_GOOGLE_AUTH';\nexport var SUCCESS_GOOGLE_AUTH = 'SUCCESS_GOOGLE_AUTH';\nexport var GET_GOOGLE_CALENDAR_LIST_BEGIN = 'GET_GOOGLE_CALENDAR_LIST_BEGIN';\nexport var GET_GOOGLE_CALENDAR_BEGIN = 'GET_GOOGLE_CALENDAR_BEGIN';\nexport var POST_GOOGLE_EVENT = 'POST_GOOGLE_EVENT';\nexport var POST_GOOGLE_EVENT_SUCCESS = 'POST_GOOGLE_EVENT_SUCCESS';\nexport var INITIAL_SYNC_EVENTS = 'INITIAL_SYNC_EVENTS'; //Not sure whether i need this\n\nexport var updateEvents = function updateEvents(updatedEvents) {\n  return {\n    type: UPDATE_EVENTS,\n    payload: updatedEvents\n  };\n};\nexport var successGoogleAuth = function successGoogleAuth(user) {\n  return {\n    type: SUCCESS_GOOGLE_AUTH,\n    payload: {\n      user: user\n    }\n  };\n};\nexport var postGoogleEvent = function postGoogleEvent(event) {\n  return {\n    type: POST_GOOGLE_EVENT,\n    payload: {\n      event: event\n    }\n  };\n};\nexport var getGoogleCalendar = function getGoogleCalendar() {\n  return {\n    type: GET_GOOGLE_CALENDAR_BEGIN\n  };\n};\nexport var getGoogleCalendarListBegin = function getGoogleCalendarListBegin() {\n  return {\n    type: GET_GOOGLE_CALENDAR_LIST_BEGIN\n  };\n};\nexport var beginGetGoogleEvents = function beginGetGoogleEvents() {\n  return {\n    type: GET_GOOGLE_EVENTS_BEGIN\n  };\n};\nexport var getOutlookEvents = function getOutlookEvents() {\n  return {\n    type: GET_OUTLOOK_EVENTS\n  };\n};\nexport var initialSyncEvents = function initialSyncEvents() {\n  return {\n    type: INITIAL_SYNC_EVENTS\n  };\n};","map":{"version":3,"sources":["/Users/sham/big-calendar/src/redux/actions.js"],"names":["ADD_NEW_EVENT","UPDATE_EVENTS","GET_GOOGLE_EVENTS_BEGIN","GET_GOOGLE_EVENTS_SUCCESS","GET_GOOGLE_EVENTS_FAILURE","GET_OUTLOOK_EVENTS","GET_OUTLOOK_EVENTS_SUCCESS","GET_OUTLOOK_EVENTS_FAILURE","BEGIN_GOOGLE_AUTH","SUCCESS_GOOGLE_AUTH","GET_GOOGLE_CALENDAR_LIST_BEGIN","GET_GOOGLE_CALENDAR_BEGIN","POST_GOOGLE_EVENT","POST_GOOGLE_EVENT_SUCCESS","INITIAL_SYNC_EVENTS","updateEvents","updatedEvents","type","payload","successGoogleAuth","user","postGoogleEvent","event","getGoogleCalendar","getGoogleCalendarListBegin","beginGetGoogleEvents","getOutlookEvents","initialSyncEvents"],"mappings":"AAAA;;;AAGA,OAAO,IAAMA,aAAa,GAAG,eAAtB;AACP,OAAO,IAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,IAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,IAAMC,yBAAyB,GAAG,2BAAlC;AACP,OAAO,IAAMC,yBAAyB,GAAG,2BAAlC;AACP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,IAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,8BAA8B,GAAG,gCAAvC;AACP,OAAO,IAAMC,yBAAyB,GAAG,2BAAlC;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,yBAAyB,GAAG,2BAAlC;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B,C,CAAkD;;AAEzD,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,aAAD;AAAA,SAAoB;AAC5CC,IAAAA,IAAI,EAAEhB,aADsC;AAE5CiB,IAAAA,OAAO,EAAEF;AAFmC,GAApB;AAAA,CAArB;AAKP,OAAO,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,IAAD;AAAA,SAAW;AAC1CH,IAAAA,IAAI,EAAER,mBADoC;AAE1CS,IAAAA,OAAO,EAAE;AACPE,MAAAA,IAAI,EAAJA;AADO;AAFiC,GAAX;AAAA,CAA1B;AAOP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AACzCL,IAAAA,IAAI,EAAEL,iBADmC;AAEzCM,IAAAA,OAAO,EAAE;AACPI,MAAAA,KAAK,EAALA;AADO;AAFgC,GAAZ;AAAA,CAAxB;AAOP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,SAAO;AAAEN,IAAAA,IAAI,EAAEN;AAAR,GAAP;AAAA,CAA1B;AAEP,OAAO,IAAMa,0BAA0B,GAAG,SAA7BA,0BAA6B;AAAA,SAAO;AAAEP,IAAAA,IAAI,EAAEP;AAAR,GAAP;AAAA,CAAnC;AAEP,OAAO,IAAMe,oBAAoB,GAAG,SAAvBA,oBAAuB;AAAA,SAAO;AAAER,IAAAA,IAAI,EAAEf;AAAR,GAAP;AAAA,CAA7B;AAEP,OAAO,IAAMwB,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SAAO;AAAET,IAAAA,IAAI,EAAEZ;AAAR,GAAP;AAAA,CAAzB;AAEP,OAAO,IAAMsB,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,SAAO;AAAEV,IAAAA,IAAI,EAAEH;AAAR,GAAP;AAAA,CAA1B","sourcesContent":["/*\n * action types\n */\nexport const ADD_NEW_EVENT = 'ADD_NEW_EVENT';\nexport const UPDATE_EVENTS = 'UPDATE_EVENTS';\nexport const GET_GOOGLE_EVENTS_BEGIN = 'GET_GOOGLE_EVENTS_BEGIN';\nexport const GET_GOOGLE_EVENTS_SUCCESS = 'GET_GOOGLE_EVENTS_SUCCESS';\nexport const GET_GOOGLE_EVENTS_FAILURE = 'GET_GOOGLE_EVENTS_FAILURE';\nexport const GET_OUTLOOK_EVENTS = 'GET_OUTLOOK_EVENTS';\nexport const GET_OUTLOOK_EVENTS_SUCCESS = 'GET_OUTLOOK_EVENTS_SUCCESS';\nexport const GET_OUTLOOK_EVENTS_FAILURE = 'GET_OUTLOOK_EVENTS_FAILURE';\nexport const BEGIN_GOOGLE_AUTH = 'BEGIN_GOOGLE_AUTH';\nexport const SUCCESS_GOOGLE_AUTH = 'SUCCESS_GOOGLE_AUTH';\nexport const GET_GOOGLE_CALENDAR_LIST_BEGIN = 'GET_GOOGLE_CALENDAR_LIST_BEGIN';\nexport const GET_GOOGLE_CALENDAR_BEGIN = 'GET_GOOGLE_CALENDAR_BEGIN';\nexport const POST_GOOGLE_EVENT = 'POST_GOOGLE_EVENT';\nexport const POST_GOOGLE_EVENT_SUCCESS = 'POST_GOOGLE_EVENT_SUCCESS';\nexport const INITIAL_SYNC_EVENTS = 'INITIAL_SYNC_EVENTS' //Not sure whether i need this\n\nexport const updateEvents = (updatedEvents) => ({\n    type: UPDATE_EVENTS,\n    payload: updatedEvents\n})\n\nexport const successGoogleAuth = (user) => ({\n  type: SUCCESS_GOOGLE_AUTH,\n  payload: {\n    user\n  }\n})\n\nexport const postGoogleEvent = (event) => ({\n  type: POST_GOOGLE_EVENT,\n  payload: {\n    event\n  }\n})\n\nexport const getGoogleCalendar = () => ({ type: GET_GOOGLE_CALENDAR_BEGIN })\n\nexport const getGoogleCalendarListBegin = () => ({ type: GET_GOOGLE_CALENDAR_LIST_BEGIN })\n\nexport const beginGetGoogleEvents = () => ({ type: GET_GOOGLE_EVENTS_BEGIN })\n\nexport const getOutlookEvents = () => ({ type: GET_OUTLOOK_EVENTS })\n\nexport const initialSyncEvents = () => ({ type: INITIAL_SYNC_EVENTS})\n"]},"metadata":{},"sourceType":"module"}
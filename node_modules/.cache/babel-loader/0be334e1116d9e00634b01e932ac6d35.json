{"ast":null,"code":"import _regeneratorRuntime from \"/Users/sham/big-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sham/big-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { createLogger } from 'redux-logger';\nimport getDb from '../db';\nimport md5 from 'md5';\nimport { normalize, schema } from 'normalizr';\nexport var loggerMiddleware = createLogger();\n\nvar MicrosoftGraph = require(\"@microsoft/microsoft-graph-client\");\n\nvar GOOGLE_CLIENT_ID = '65724758895-gc7lubjkjsqqddfhlb7jcme80i3mjqn0.apps.googleusercontent.com';\nvar API_KEY = 'AIzaSyCTYXWtoRKnXeZkPCcZwYOXm0Qz3Lz9F9g';\nvar GOOGLE_SCOPE = \"https://www.googleapis.com/auth/calendar.events\";\n/* Use later\nconst OUTLOOK_CLIENT_ID = '6b770a68-2156-4345-b0aa-d95419e31be1';\nconst BASE_URL = 'https://login.microsoftonline.com/common/oauth2/v2.0/authorize?';\n*/\n\nvar GoogleAuth;\n\nfunction outlookCalendarEvents() {\n  return MicrosoftGraph.Client.init({\n    authProvider: function authProvider(done) {\n      done(null, window.localStorage.getItem('at'));\n    }\n  }).api('/me/events').top(10).select('subject,start,end,createdDatetime').orderby('createdDatetime DESC').get(function (err, res) {\n    if (err) {\n      return err;\n    } else {\n      return res.value;\n    }\n  });\n}\n\nfunction handleAuthClick(auth) {\n  if (auth.isSignedIn.get()) {\n    console.log(\"Signed In to Google!\");\n  } else {\n    auth.signIn();\n  }\n}\n\nexport var fetchCalendarList = function fetchCalendarList(request, calendarList, resolve, reject) {\n  debugger;\n  request.execute(function (resp) {\n    var newList = calendarList.concat(resp.result.items);\n    var pageToken = resp.nextPageToken;\n\n    if (pageToken !== undefined) {\n      var nextRequest = window.gapi.client.calendar.calendarList.list({\n        'pageToken': pageToken\n      });\n      fetchEvents(nextRequest, newList, resolve, reject);\n    } else {\n      resolve(calendarList);\n    }\n  }, function (error) {\n    console.log(error);\n  });\n};\nexport var fetchEvents = function fetchEvents(request, items, resolve, reject) {\n  request.execute(function (resp) {\n    var newItems = items.concat(resp.result.items);\n    var pageToken = resp.nextPageToken;\n    var syncToken = resp.nextSyncToken; //debugger\n\n    if (pageToken !== undefined) {\n      var nextRequest = window.gapi.client.calendar.events.list({\n        'calendarId': 'primary',\n        'pageToken': pageToken\n      });\n      fetchEvents(nextRequest, newItems, resolve, reject);\n    } else {\n      localStorage.setItem('sync', syncToken);\n      resolve(newItems);\n    }\n  }, function (error) {\n    if (error.code === 410) {\n      console.log('Invalid sync token, clearing event store and re-syncing.');\n      localStorage.deleteItem('sync');\n      var newRequest = window.gapi.client.calendar.events.list({\n        'calendarId': 'primary'\n      });\n      fetchEvents(newRequest, items, resolve, reject);\n    } else {\n      console.log(error);\n      reject('Something went wrong, Please refresh and try again');\n    }\n  });\n};\nexport var apiMiddleware = function apiMiddleware(store) {\n  return function (next) {\n    return function (action) {\n      if (action.type === 'BEGIN_GOOGLE_AUTH') {\n        window.gapi.load('client:auth2', {\n          callback: function callback() {\n            window.gapi.client.init({\n              'apiKey': API_KEY,\n              'clientId': GOOGLE_CLIENT_ID,\n              'scope': GOOGLE_SCOPE,\n              'discoveryDocs': ['https://www.googleapis.com/discovery/v1/apis/drive/v3/rest']\n            }).then(function () {\n              GoogleAuth = window.gapi.auth2.getAuthInstance(); //GoogleAuth.signIn();\n\n              handleAuthClick(GoogleAuth);\n              var user = GoogleAuth.currentUser.get();\n              var isAuthorized = user.hasGrantedScopes(GOOGLE_SCOPE);\n\n              if (isAuthorized) {\n                next({\n                  type: 'SUCCESS_GOOGLE_AUTH',\n                  payload: {\n                    user: user\n                  }\n                });\n              }\n            });\n          }\n        });\n      }\n\n      if (action.type === 'GET_GOOGLE_EVENTS_BEGIN') {\n        window.gapi.client.load('calendar', 'v3', function () {\n          var request = window.gapi.client.calendar.events.list({\n            'calendarId': 'primary'\n          });\n          var syncToken = localStorage.getItem('sync');\n\n          if (syncToken == null) {\n            console.log(\"Performing full sync\");\n          } else {\n            console.log(\"Performing incremental sync\");\n            request = window.gapi.client.calendar.events.list({\n              'calendarId': 'primary',\n              'syncToken': syncToken\n            });\n          }\n\n          var result = [];\n          new Promise(function (resolve, reject) {\n            fetchEvents(request, result, resolve, reject);\n          }).then(\n          /*#__PURE__*/\n          function () {\n            var _ref = _asyncToGenerator(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee(response) {\n              var results, myData, singleEvent, mySchema, normalizedResults;\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return storeEvents(response);\n\n                    case 2:\n                      results = _context.sent;\n                      myData = {\n                        events: results\n                      };\n                      singleEvent = new schema.Entity('events');\n                      mySchema = {\n                        events: [singleEvent]\n                      };\n                      normalizedResults = normalize(myData, mySchema);\n                      next({\n                        type: 'GET_GOOGLE_EVENTS_SUCCESS',\n                        payload: {\n                          data: results,\n                          normalized_data: normalizedResults\n                        }\n                      });\n\n                    case 8:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee, this);\n            }));\n\n            return function (_x) {\n              return _ref.apply(this, arguments);\n            };\n          }());\n        });\n      }\n\n      if (action.type === 'GET_GOOGLE_CALENDAR_LIST_BEGIN') {\n        var pageToken = null;\n        var calendarList = [];\n        window.gapi.client.load('calendar', 'v3', function () {\n          var request = window.gapi.client.calendar.calendarList.list({\n            'pageToken': pageToken\n          });\n          new Promise(function (resolve, reject) {\n            fetchCalendarList(request, calendarList, resolve, reject);\n          }).then(\n          /*#__PURE__*/\n          function () {\n            var _ref2 = _asyncToGenerator(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee2(response) {\n              return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      console.log(response);\n\n                    case 1:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2, this);\n            }));\n\n            return function (_x2) {\n              return _ref2.apply(this, arguments);\n            };\n          }());\n        });\n      }\n\n      if (action.type === 'NEXT_GET_GOOGLE_EVENTS') {}\n\n      if (action.type === 'LAST_GET_GOOGLE_EVENTS') {}\n\n      if (action.type === 'POST_GOOGLE_EVENT') {\n        var calendarObject = {\n          'calendarId': 'primary',\n          'resource': action.payload.event\n        }; //deprecated function: take note\n\n        window.gapi.client.load('calendar', 'v3', function () {\n          var request = window.gapi.client.calendar.events.insert(calendarObject);\n          request.execute(function (resp) {\n            storeEvent(resp);\n            next({\n              type: action.type + '_SUCCESS',\n              payload: {\n                data: resp\n              }\n            });\n          });\n        });\n      }\n\n      if (action.type === 'GET_OUTLOOK_EVENTS') {\n        /*const value = outlookCalendarEvents();\n        next({\n          type: action.type + '_SUCCESS',\n          payload: {\n            data: value\n          }\n        })*/\n      }\n\n      return next(action);\n    };\n  };\n};\n\nvar storeEvent =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(singleEvent) {\n    var db, addedEvent;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return getDb();\n\n          case 2:\n            db = _context3.sent;\n            addedEvent = []; //need to preprocess data\n\n            _context3.next = 6;\n            return db.events.upsert({\n              'id': singleEvent.id,\n              'end': singleEvent.end,\n              'start': singleEvent.start,\n              'summary': singleEvent.summary\n            });\n\n          case 6:\n            addedEvent.push({\n              'id': singleEvent.id,\n              'end': singleEvent.end,\n              'start': singleEvent.start,\n              'summary': singleEvent.summary\n            });\n            return _context3.abrupt(\"return\", addedEvent);\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, this);\n  }));\n\n  return function storeEvent(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nfunction storeEvents(_x4) {\n  return _storeEvents.apply(this, arguments);\n}\n\nfunction _storeEvents() {\n  _storeEvents = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(events) {\n    var db, dbEvents, addEvents, results, values;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return getDb();\n\n          case 2:\n            db = _context5.sent;\n            dbEvents = filter(events);\n            addEvents = []; //need to preprocess data\n\n            results = dbEvents.map(\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee4(dbEvent) {\n                return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        if (!dbEvent.id) {\n                          _context4.next = 10;\n                          break;\n                        }\n\n                        _context4.prev = 1;\n                        _context4.next = 4;\n                        return db.events.upsert(dbEvent);\n\n                      case 4:\n                        _context4.next = 9;\n                        break;\n\n                      case 6:\n                        _context4.prev = 6;\n                        _context4.t0 = _context4[\"catch\"](1);\n                        console.log(_context4.t0);\n\n                      case 9:\n                        return _context4.abrupt(\"return\", dbEvent);\n\n                      case 10:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4, this, [[1, 6]]);\n              }));\n\n              return function (_x5) {\n                return _ref4.apply(this, arguments);\n              };\n            }());\n            _context5.next = 8;\n            return Promise.all(results);\n\n          case 8:\n            values = _context5.sent;\n            return _context5.abrupt(\"return\", values);\n\n          case 10:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, this);\n  }));\n  return _storeEvents.apply(this, arguments);\n}\n\nexport var filter = function filter(data) {\n  debugger;\n  var formated_events = data.map(function (eachEvent) {\n    return {\n      'id': md5(eachEvent.id),\n      'end': eachEvent.end,\n      'start': eachEvent.start,\n      'summary': eachEvent.summary,\n      'organizer': eachEvent.organizer,\n      'recurrence': eachEvent.recurrence,\n      'iCalUID': eachEvent.iCalUID,\n      'attendees': eachEvent.attendees\n    };\n  });\n  return formated_events;\n};\nexport var dbMiddleware = function dbMiddleware(store) {\n  return function (next) {\n    return function (action) {\n      if (action.type === 'INITIAL_SYNC_EVENTS') {}\n\n      return next(action);\n    };\n  };\n};","map":{"version":3,"sources":["/Users/sham/big-calendar/src/redux/middleware.js"],"names":["createLogger","getDb","md5","normalize","schema","loggerMiddleware","MicrosoftGraph","require","GOOGLE_CLIENT_ID","API_KEY","GOOGLE_SCOPE","GoogleAuth","outlookCalendarEvents","Client","init","authProvider","done","window","localStorage","getItem","api","top","select","orderby","get","err","res","value","handleAuthClick","auth","isSignedIn","console","log","signIn","fetchCalendarList","request","calendarList","resolve","reject","execute","resp","newList","concat","result","items","pageToken","nextPageToken","undefined","nextRequest","gapi","client","calendar","list","fetchEvents","error","newItems","syncToken","nextSyncToken","events","setItem","code","deleteItem","newRequest","apiMiddleware","store","next","action","type","load","callback","then","auth2","getAuthInstance","user","currentUser","isAuthorized","hasGrantedScopes","payload","Promise","response","storeEvents","results","myData","singleEvent","Entity","mySchema","normalizedResults","data","normalized_data","calendarObject","event","insert","storeEvent","db","addedEvent","upsert","id","end","start","summary","push","dbEvents","filter","addEvents","map","dbEvent","all","values","formated_events","eachEvent","organizer","recurrence","iCalUID","attendees","dbMiddleware"],"mappings":"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","sourcesContent":["import { createLogger } from 'redux-logger';\nimport getDb from '../db';\nimport md5 from 'md5';\nimport { normalize, schema } from 'normalizr';\n\nexport const loggerMiddleware = createLogger();\n\n\nconst MicrosoftGraph = require(\"@microsoft/microsoft-graph-client\");\n\nconst GOOGLE_CLIENT_ID = '65724758895-gc7lubjkjsqqddfhlb7jcme80i3mjqn0.apps.googleusercontent.com';\nconst API_KEY = 'AIzaSyCTYXWtoRKnXeZkPCcZwYOXm0Qz3Lz9F9g';\nconst GOOGLE_SCOPE = `https://www.googleapis.com/auth/calendar.events`;\n/* Use later\nconst OUTLOOK_CLIENT_ID = '6b770a68-2156-4345-b0aa-d95419e31be1';\nconst BASE_URL = 'https://login.microsoftonline.com/common/oauth2/v2.0/authorize?';\n*/\nlet GoogleAuth;\n\n\n\nfunction outlookCalendarEvents() {\n  return MicrosoftGraph.Client.init({\n    authProvider: (done) => {\n      done(null, window.localStorage.getItem('at'))\n    }\n  }).api('/me/events')\n    .top(10)\n    .select('subject,start,end,createdDatetime')\n    .orderby('createdDatetime DESC')\n    .get((err, res) => {\n      if (err) {\n        return err;\n      } else {\n        return res.value;\n      }\n    });\n}\n\nfunction handleAuthClick(auth) {\n  if(auth.isSignedIn.get()) {\n    console.log(\"Signed In to Google!\");\n  }\n  else {\n    auth.signIn();\n  }\n}\n\nexport const fetchCalendarList = (request, calendarList, resolve, reject) => {\n  debugger;\n  request.execute((resp) => {\n    const newList = calendarList.concat(resp.result.items);\n    let pageToken = resp.nextPageToken;\n    if(pageToken !== undefined) {\n      var nextRequest = window.gapi.client.calendar.calendarList.list({\n        'pageToken': pageToken\n      })\n      fetchEvents(nextRequest, newList, resolve, reject);\n    } else {\n      resolve(calendarList);\n    }\n  }, (error) => {\n    console.log(error);\n  })\n}\n\nexport const fetchEvents = (request, items, resolve, reject) => {\n    request.execute((resp) => {\n    const newItems = items.concat(resp.result.items);\n    let pageToken = resp.nextPageToken;\n    let syncToken = resp.nextSyncToken;\n    //debugger\n    if(pageToken !== undefined) {\n      var nextRequest = window.gapi.client.calendar.events.list({\n        'calendarId' : 'primary',\n        'pageToken': pageToken\n      });\n      fetchEvents(nextRequest, newItems, resolve, reject);\n    } else {\n      localStorage.setItem('sync', syncToken);\n      resolve(newItems);\n    }\n  }, (error) => {\n    if(error.code === 410) {\n      console.log('Invalid sync token, clearing event store and re-syncing.');\n      localStorage.deleteItem('sync');\n      var newRequest = window.gapi.client.calendar.events.list({\n        'calendarId' : 'primary',\n      });\n      fetchEvents(newRequest, items, resolve, reject);\n    } else {\n      console.log(error);\n      reject('Something went wrong, Please refresh and try again');\n    }\n  });\n}\n\nexport const apiMiddleware = store => next => action => {\n  if(action.type === 'BEGIN_GOOGLE_AUTH') {\n    window.gapi.load('client:auth2', {\n      callback: () => {\n        window.gapi.client.init({\n            'apiKey': API_KEY,\n            'clientId': GOOGLE_CLIENT_ID,\n            'scope': GOOGLE_SCOPE,\n            'discoveryDocs': ['https://www.googleapis.com/discovery/v1/apis/drive/v3/rest'],\n        }).then(() => {\n            GoogleAuth = window.gapi.auth2.getAuthInstance();\n            //GoogleAuth.signIn();\n            handleAuthClick(GoogleAuth);\n            const user = GoogleAuth.currentUser.get();\n            const isAuthorized = user.hasGrantedScopes(GOOGLE_SCOPE);\n            if(isAuthorized) {\n              next({\n                type: 'SUCCESS_GOOGLE_AUTH',\n                payload: {\n                  user\n                }\n              })\n            }\n        })\n      }\n    });\n  }\n\n  if(action.type === 'GET_GOOGLE_EVENTS_BEGIN') {\n    window.gapi.client.load('calendar', 'v3', function() {\n      var request = window.gapi.client.calendar.events.list({\n        'calendarId' : 'primary',\n      });\n      let syncToken = localStorage.getItem('sync');\n      if(syncToken == null) {\n        console.log(\"Performing full sync\");\n      } else {\n        console.log(\"Performing incremental sync\");\n        request = window.gapi.client.calendar.events.list({\n          'calendarId' : 'primary',\n          'syncToken': syncToken\n        });\n      }\n      let result = [];\n      new Promise((resolve, reject) => {\n        fetchEvents(request, result, resolve, reject);\n      }).then(async response => {\n          let results = await storeEvents(response);\n          const myData = { events : results};\n          const singleEvent = new schema.Entity('events');\n          const mySchema = { events: [ singleEvent ]};\n          const normalizedResults = normalize(myData, mySchema);\n          next({\n            type: 'GET_GOOGLE_EVENTS_SUCCESS',\n            payload: {\n              data: results,\n              normalized_data: normalizedResults\n            }\n          })\n        });\n    })\n  }\n\n  if(action.type === 'GET_GOOGLE_CALENDAR_LIST_BEGIN') {\n    let pageToken = null\n    let calendarList = [];\n    window.gapi.client.load('calendar', 'v3', function() {\n      var request = window.gapi.client.calendar.calendarList.list({\n        'pageToken': pageToken\n      })\n      new Promise((resolve, reject) => {\n        fetchCalendarList(request, calendarList, resolve, reject);\n      }).then(async response => {\n        console.log(response)\n      })\n    })\n\n\n  }\n\n  if(action.type === 'NEXT_GET_GOOGLE_EVENTS') {\n\n  }\n\n  if(action.type === 'LAST_GET_GOOGLE_EVENTS') {\n\n  }\n\n  if(action.type === 'POST_GOOGLE_EVENT') {\n    let calendarObject = {\n        'calendarId': 'primary',\n        'resource': action.payload.event\n    };\n\n    //deprecated function: take note\n    window.gapi.client.load('calendar', 'v3', function() {\n      var request = window.gapi.client.calendar.events.insert(calendarObject);\n      request.execute(function(resp) {\n        storeEvent(resp);\n        next({\n          type: action.type + '_SUCCESS',\n          payload: {\n            data: resp\n          }\n        })\n      });\n    })\n  }\n\n  if(action.type === 'GET_OUTLOOK_EVENTS') {\n    /*const value = outlookCalendarEvents();\n    next({\n      type: action.type + '_SUCCESS',\n      payload: {\n        data: value\n      }\n    })*/\n  }\n\n  return next(action);\n}\n\nconst storeEvent = async singleEvent => {\n  const db = await getDb();\n  const addedEvent = [];\n  //need to preprocess data\n  await db.events.upsert({\n    'id' : singleEvent.id,\n    'end' : singleEvent.end,\n    'start': singleEvent.start,\n    'summary': singleEvent.summary\n  });\n  addedEvent.push({\n    'id' : singleEvent.id,\n    'end' : singleEvent.end,\n    'start': singleEvent.start,\n    'summary': singleEvent.summary\n  });\n  return addedEvent;\n}\n\nasync function storeEvents(events){\n  const db = await getDb();\n  const dbEvents = filter(events);\n  const addEvents = [];\n  //need to preprocess data\n  const results = dbEvents.map(async dbEvent => {\n    if(!!dbEvent.id) {\n      try {\n        await db.events.upsert(dbEvent);\n      } catch(e) {\n        console.log(e);\n      }\n      return dbEvent;\n    }\n  });\n  let values = await Promise.all(results);\n  return values;\n}\n\nexport const filter = (data) => {\n  debugger\n    const formated_events = data\n    .map(eachEvent => {\n        return  ({\n          'id' : md5(eachEvent.id),\n          'end' : eachEvent.end,\n          'start': eachEvent.start,\n          'summary': eachEvent.summary,\n          'organizer': eachEvent.organizer,\n          'recurrence': eachEvent.recurrence,\n          'iCalUID': eachEvent.iCalUID,\n          'attendees': eachEvent.attendees\n        })\n      }\n    );\n    return formated_events\n}\n\n\nexport const dbMiddleware = store => next => action => {\n  if(action.type === 'INITIAL_SYNC_EVENTS') {\n  }\n  return next(action);\n}\n"]},"metadata":{},"sourceType":"module"}
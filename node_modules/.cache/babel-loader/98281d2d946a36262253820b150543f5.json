{"ast":null,"code":"import ReactCalendarView from '../components/react-calendar-view';\nimport { withRouter } from 'react-router-dom';\nimport { beginGoogleAuth as _beginGoogleAuth } from '../actions/auth';\nimport { retrieveStoreEvents as _retrieveStoreEvents } from '../actions/db/events';\nimport { beginGetGoogleEvents as _beginGetGoogleEvents } from '../actions/events';\nimport { connect } from 'react-redux';\nimport { getFilteredEvents } from '../selectors/ui-selector';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    events: getFilteredEvents(state),\n    initialSync: state.events.initialSync,\n    isAuth: state.auth.currentUser\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateEvents: function (_updateEvents) {\n      function updateEvents(_x) {\n        return _updateEvents.apply(this, arguments);\n      }\n\n      updateEvents.toString = function () {\n        return _updateEvents.toString();\n      };\n\n      return updateEvents;\n    }(function (nextEvents) {\n      return dispatch(updateEvents(nextEvents));\n    }),\n    beginGetGoogleEvents: function beginGetGoogleEvents() {\n      return dispatch(_beginGetGoogleEvents());\n    },\n    beginGoogleAuth: function beginGoogleAuth() {\n      return dispatch(_beginGoogleAuth());\n    },\n    getGoogleCalendarListBegin: function (_getGoogleCalendarListBegin) {\n      function getGoogleCalendarListBegin() {\n        return _getGoogleCalendarListBegin.apply(this, arguments);\n      }\n\n      getGoogleCalendarListBegin.toString = function () {\n        return _getGoogleCalendarListBegin.toString();\n      };\n\n      return getGoogleCalendarListBegin;\n    }(function () {\n      return dispatch(getGoogleCalendarListBegin());\n    }),\n    retrieveStoreEvents: function retrieveStoreEvents() {\n      return dispatch(_retrieveStoreEvents());\n    } //getOutlookEvents: (url) => dispatch(getOutlookEvents(url)),\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ReactCalendarView));","map":{"version":3,"sources":["/Users/sham/big-calendar/src/containers/view-container.js"],"names":["ReactCalendarView","withRouter","beginGoogleAuth","retrieveStoreEvents","beginGetGoogleEvents","connect","getFilteredEvents","mapStateToProps","state","events","initialSync","isAuth","auth","currentUser","mapDispatchToProps","dispatch","updateEvents","nextEvents","getGoogleCalendarListBegin"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,mCAA9B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SACEC,eAAe,IAAfA,gBADF,QAEO,iBAFP;AAGA,SACEC,mBAAmB,IAAnBA,oBADF,QAEO,sBAFP;AAGA,SACEC,oBAAoB,IAApBA,qBADF,QAEO,mBAFP;AAGA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,0BAAlC;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLC,IAAAA,MAAM,EAAEH,iBAAiB,CAACE,KAAD,CADpB;AAELE,IAAAA,WAAW,EAAEF,KAAK,CAACC,MAAN,CAAaC,WAFrB;AAGLC,IAAAA,MAAM,EAAEH,KAAK,CAACI,IAAN,CAAWC;AAHd,GAAP;AAKD,CAND;;AAQA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtCC,IAAAA,YAAY;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,MAAE,UAACC,UAAD;AAAA,aAAgBF,QAAQ,CAACC,YAAY,CAACC,UAAD,CAAb,CAAxB;AAAA,KAAF,CAD0B;AAEtCb,IAAAA,oBAAoB,EAAE;AAAA,aAAMW,QAAQ,CAACX,qBAAoB,EAArB,CAAd;AAAA,KAFgB;AAGtCF,IAAAA,eAAe,EAAE;AAAA,aAAMa,QAAQ,CAACb,gBAAe,EAAhB,CAAd;AAAA,KAHqB;AAItCgB,IAAAA,0BAA0B;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,MAAE;AAAA,aAAMH,QAAQ,CAACG,0BAA0B,EAA3B,CAAd;AAAA,KAAF,CAJY;AAKtCf,IAAAA,mBAAmB,EAAE;AAAA,aAAMY,QAAQ,CAACZ,oBAAmB,EAApB,CAAd;AAAA,KALiB,CAMtC;;AANsC,GAAL;AAAA,CAAnC;;AAYA,eAAeE,OAAO,CAACE,eAAD,EAAkBO,kBAAlB,CAAP,CAA6Cb,UAAU,CAACD,iBAAD,CAAvD,CAAf","sourcesContent":["import ReactCalendarView from '../components/react-calendar-view';\nimport { withRouter } from 'react-router-dom';\nimport {\n  beginGoogleAuth,\n} from '../actions/auth';\nimport {\n  retrieveStoreEvents\n} from '../actions/db/events';\nimport {\n  beginGetGoogleEvents\n} from '../actions/events';\nimport { connect } from 'react-redux';\nimport { getFilteredEvents } from '../selectors/ui-selector';\n\nconst mapStateToProps = state => {\n  return {\n    events: getFilteredEvents(state),\n    initialSync: state.events.initialSync,\n    isAuth: state.auth.currentUser\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateEvents: (nextEvents) => dispatch(updateEvents(nextEvents)),\n  beginGetGoogleEvents: () => dispatch(beginGetGoogleEvents()),\n  beginGoogleAuth: () => dispatch(beginGoogleAuth()),\n  getGoogleCalendarListBegin: () => dispatch(getGoogleCalendarListBegin()),\n  retrieveStoreEvents: () => dispatch(retrieveStoreEvents())\n  //getOutlookEvents: (url) => dispatch(getOutlookEvents(url)),\n\n})\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ReactCalendarView));\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Sameenhaja/big-calendar/src/react-calendar-view.js\";\nimport React from \"react\";\nimport BigCalendar from \"react-big-calendar\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport moment from \"moment\";\nimport './react-calendar-view.css';\nimport { withRouter } from 'react-router-dom';\nimport 'react-big-calendar/lib/addons/dragAndDrop/styles.less';\nimport Modal from 'react-modal';\nvar localizer = BigCalendar.momentLocalizer(moment);\nvar DragAndDropCalendar = withDragAndDrop(BigCalendar);\nvar customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\n\nvar ReactCalendarView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ReactCalendarView, _React$Component);\n\n  function ReactCalendarView(props) {\n    var _this;\n\n    _classCallCheck(this, ReactCalendarView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReactCalendarView).call(this, props));\n\n    _this.resizeEvent = function (resizeType, _ref) {\n      var event = _ref.event,\n          start = _ref.start,\n          end = _ref.end;\n      var events = _this.props.eventsList;\n      var nextEvents = events.map(function (existingEvent) {\n        return existingEvent.id === event.id ? _objectSpread({}, existingEvent, {\n          start: start,\n          end: end\n        }) : existingEvent;\n      });\n\n      _this.props.pushEventsFromResize(nextEvents);\n    };\n\n    _this.handleSelectDate = function (_ref2) {\n      var start = _ref2.start,\n          end = _ref2.end;\n\n      _this.props.history.push(\"/\".concat(start, \"/$\").concat(end));\n    };\n\n    _this.handleEventClick = function (event) {\n      alert(event);\n\n      _this.setState({\n        isShowEvent: true\n      });\n    };\n\n    _this.close = function () {\n      _this.setState({\n        isShowEvent: false\n      });\n    };\n\n    _this.afterOpenModal = function () {\n      // references are now sync'd and can be accessed.\n      _this.subtitle.style.color = '#f00';\n    };\n\n    _this.state = {\n      events: '',\n      isShowEvent: false\n    };\n    _this.moveEvent = _this.moveEvent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ReactCalendarView, [{\n    key: \"moveEvent\",\n    value: function moveEvent(_ref3) {\n      var event = _ref3.event,\n          start = _ref3.start,\n          end = _ref3.end;\n      var events = this.props.eventsList;\n      var idx = events.indexOf(event);\n\n      var updatedEvent = _objectSpread({}, event, {\n        start: start,\n        end: end\n      });\n\n      var nextEvents = _toConsumableArray(events);\n\n      nextEvents.splice(idx, 1, updatedEvent);\n      this.props.pushEventsFromMove(nextEvents);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        isOpen: this.state.isShowEvent,\n        onAfterOpen: this.afterOpenModal,\n        onRequestClose: this.close,\n        style: customStyles,\n        contentLabel: \"Example Modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        ref: function ref(subtitle) {\n          return _this2.subtitle = subtitle;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Hello\"), React.createElement(\"button\", {\n        onClick: this.close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"close\")), React.createElement(DragAndDropCalendar, {\n        selectable: true,\n        localizer: localizer,\n        events: this.props.eventsList,\n        onEventDrop: this.moveEvent,\n        resizable: true,\n        onEventResize: this.resizeEvent,\n        defaultView: BigCalendar.Views.MONTH,\n        onSelectSlot: this.handleSelectDate,\n        onSelectEvent: function onSelectEvent(event) {\n          return _this2.handleEventClick(event);\n        },\n        popup: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ReactCalendarView;\n}(React.Component);\n\nexport default withRouter(ReactCalendarView);","map":{"version":3,"sources":["/Users/Sameenhaja/big-calendar/src/react-calendar-view.js"],"names":["React","BigCalendar","withDragAndDrop","moment","withRouter","Modal","localizer","momentLocalizer","DragAndDropCalendar","customStyles","content","top","left","right","bottom","marginRight","transform","ReactCalendarView","props","resizeEvent","resizeType","event","start","end","events","eventsList","nextEvents","map","existingEvent","id","pushEventsFromResize","handleSelectDate","history","push","handleEventClick","alert","setState","isShowEvent","close","afterOpenModal","subtitle","style","color","state","moveEvent","bind","idx","indexOf","updatedEvent","splice","pushEventsFromMove","Views","MONTH","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport BigCalendar from \"react-big-calendar\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport moment from \"moment\";\nimport './react-calendar-view.css';\nimport { withRouter } from 'react-router-dom';\nimport 'react-big-calendar/lib/addons/dragAndDrop/styles.less';\nimport Modal from 'react-modal';\n\n\nconst localizer = BigCalendar.momentLocalizer(moment);\nconst DragAndDropCalendar = withDragAndDrop(BigCalendar);\n\nconst customStyles = {\n  content : {\n    top                   : '50%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)'\n  }\n};\n\nclass ReactCalendarView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      events: '',\n      isShowEvent: false\n    };\n\n    this.moveEvent = this.moveEvent.bind(this);\n  }\n\n  moveEvent({ event, start, end }) {\n      const events = this.props.eventsList;\n\n      const idx = events.indexOf(event);\n      const updatedEvent = { ...event, start, end };\n\n      const nextEvents = [...events];\n      nextEvents.splice(idx, 1, updatedEvent);\n\n\n      this.props.pushEventsFromMove(nextEvents);\n  }\n\n  resizeEvent = (resizeType, { event, start, end }) => {\n    const events = this.props.eventsList;\n\n    const nextEvents = events.map(existingEvent => {\n      return existingEvent.id === event.id\n        ? { ...existingEvent, start, end }\n        : existingEvent;\n    });\n\n    this.props.pushEventsFromResize(nextEvents);\n  };\n\n  handleSelectDate = ({ start, end }) => {\n    this.props.history.push(`/${start}/$${end}`);\n  }\n\n  handleEventClick = (event) => {\n    alert(event);\n    this.setState({\n      isShowEvent: true,\n    })\n  }\n\n  close = () => {\n    this.setState({\n      isShowEvent: false\n    })\n  }\n\n  afterOpenModal = () => {\n    // references are now sync'd and can be accessed.\n    this.subtitle.style.color = '#f00';\n  }\n\n  render() {\n    return (\n      <div>\n      <Modal\n          isOpen={this.state.isShowEvent}\n          onAfterOpen={this.afterOpenModal}\n          onRequestClose={this.close}\n          style={customStyles}\n          contentLabel=\"Example Modal\"\n        >\n          <h2 ref={subtitle => this.subtitle = subtitle}>Hello</h2>\n          <button onClick={this.close}>close</button>\n        </Modal>\n      <DragAndDropCalendar\n        selectable\n        localizer={localizer}\n        events={this.props.eventsList}\n        onEventDrop={this.moveEvent}\n        resizable\n        onEventResize={this.resizeEvent}\n        defaultView={BigCalendar.Views.MONTH}\n        onSelectSlot={this.handleSelectDate}\n        onSelectEvent={(event) => this.handleEventClick(event)}\n        popup\n      />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(ReactCalendarView);\n"]},"metadata":{},"sourceType":"module"}
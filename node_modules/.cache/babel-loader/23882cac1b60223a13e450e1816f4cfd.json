{"ast":null,"code":"import { map, catchError } from 'rxjs/operators';\nimport { ofType } from 'redux-observable';\nimport { from } from 'rxjs';\nimport { API_KEY, GOOGLE_CLIENT_ID, GOOGLE_SCOPE } from '../utils/google';\nimport { BEGIN_GOOGLE_AUTH, successGoogleAuth, failGoogleAuth } from '../actions/auth';\nvar GoogleAuth = '';\n\nvar handleAuthClick = function handleAuthClick(auth) {\n  if (auth.isSignedIn.get()) {\n    console.log(\"Signed In to Google!\");\n  } else {\n    auth.signIn();\n  }\n};\n\nvar loginGoogle = function loginGoogle() {\n  window.gapi.load('client:auth2', {\n    callback: function callback() {\n      window.gapi.client.init({\n        'apiKey': API_KEY,\n        'clientId': GOOGLE_CLIENT_ID,\n        'scope': GOOGLE_SCOPE,\n        'discoveryDocs': ['https://www.googleapis.com/discovery/v1/apis/drive/v3/rest']\n      }).then(function () {\n        GoogleAuth = window.gapi.auth2.getAuthInstance(); //GoogleAuth.signIn();\n\n        handleAuthClick(GoogleAuth);\n        var user = GoogleAuth.currentUser.get();\n        var isAuthorized = user.hasGrantedScopes(GOOGLE_SCOPE);\n        debugger;\n        return isAuthorized;\n      });\n    }\n  });\n};\n\nexport var beginGoogleAuthEpic = function beginGoogleAuthEpic(action$) {\n  return action$.pipe(ofType(BEGIN_GOOGLE_AUTH), mergeMap(function () {\n    return from(loginGoogle()).pipe(map(function (isAuthorized) {\n      return isAuthorized ? successGoogleAuth() : failGoogleAuth();\n    }));\n  }));\n};","map":{"version":3,"sources":["/Users/sham/big-calendar/src/epics/auth.js"],"names":["map","catchError","ofType","from","API_KEY","GOOGLE_CLIENT_ID","GOOGLE_SCOPE","BEGIN_GOOGLE_AUTH","successGoogleAuth","failGoogleAuth","GoogleAuth","handleAuthClick","auth","isSignedIn","get","console","log","signIn","loginGoogle","window","gapi","load","callback","client","init","then","auth2","getAuthInstance","user","currentUser","isAuthorized","hasGrantedScopes","beginGoogleAuthEpic","action$","pipe","mergeMap"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,QAAgC,gBAAhC;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,SAASC,OAAT,EAAkBC,gBAAlB,EAAoCC,YAApC,QAAwD,iBAAxD;AACA,SACEC,iBADF,EAEEC,iBAFF,EAGEC,cAHF,QAIO,iBAJP;AAMA,IAAIC,UAAU,GAAG,EAAjB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD,EAAU;AAChC,MAAGA,IAAI,CAACC,UAAL,CAAgBC,GAAhB,EAAH,EAA0B;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,GAFD,MAGK;AACHJ,IAAAA,IAAI,CAACK,MAAL;AACD;AACF,CAPD;;AASA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBC,EAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC;AAC/BC,IAAAA,QAAQ,EAAE,oBAAM;AACdH,MAAAA,MAAM,CAACC,IAAP,CAAYG,MAAZ,CAAmBC,IAAnB,CAAwB;AACpB,kBAAUpB,OADU;AAEpB,oBAAYC,gBAFQ;AAGpB,iBAASC,YAHW;AAIpB,yBAAiB,CAAC,4DAAD;AAJG,OAAxB,EAKGmB,IALH,CAKQ,YAAM;AACVf,QAAAA,UAAU,GAAGS,MAAM,CAACC,IAAP,CAAYM,KAAZ,CAAkBC,eAAlB,EAAb,CADU,CAEV;;AACAhB,QAAAA,eAAe,CAACD,UAAD,CAAf;AACA,YAAMkB,IAAI,GAAGlB,UAAU,CAACmB,WAAX,CAAuBf,GAAvB,EAAb;AACA,YAAMgB,YAAY,GAAGF,IAAI,CAACG,gBAAL,CAAsBzB,YAAtB,CAArB;AACA;AACA,eAAOwB,YAAP;AACH,OAbD;AAcD;AAhB8B,GAAjC;AAkBD,CAnBD;;AAqBA,OAAO,IAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,OAAO;AAAA,SAAIA,OAAO,CAACC,IAAR,CAC5ChC,MAAM,CAACK,iBAAD,CADsC,EAE5C4B,QAAQ,CAAC;AAAA,WAAMhC,IAAI,CAACe,WAAW,EAAZ,CAAJ,CAAoBgB,IAApB,CACblC,GAAG,CAAC,UAAC8B,YAAD;AAAA,aAAkBA,YAAY,GAAGtB,iBAAiB,EAApB,GAAyBC,cAAc,EAArE;AAAA,KAAD,CADU,CAAN;AAAA,GAAD,CAFoC,CAAJ;AAAA,CAAnC","sourcesContent":["import { map, catchError } from 'rxjs/operators';\nimport { ofType } from 'redux-observable';\nimport { from } from 'rxjs';\nimport { API_KEY, GOOGLE_CLIENT_ID, GOOGLE_SCOPE } from '../utils/google';\nimport {\n  BEGIN_GOOGLE_AUTH,\n  successGoogleAuth,\n  failGoogleAuth\n} from '../actions/auth';\n\nlet GoogleAuth = '';\n\nconst handleAuthClick = (auth) => {\n  if(auth.isSignedIn.get()) {\n    console.log(\"Signed In to Google!\");\n  }\n  else {\n    auth.signIn();\n  }\n}\n\nconst loginGoogle = () => {\n  window.gapi.load('client:auth2', {\n    callback: () => {\n      window.gapi.client.init({\n          'apiKey': API_KEY,\n          'clientId': GOOGLE_CLIENT_ID,\n          'scope': GOOGLE_SCOPE,\n          'discoveryDocs': ['https://www.googleapis.com/discovery/v1/apis/drive/v3/rest'],\n      }).then(() => {\n          GoogleAuth = window.gapi.auth2.getAuthInstance();\n          //GoogleAuth.signIn();\n          handleAuthClick(GoogleAuth);\n          const user = GoogleAuth.currentUser.get();\n          const isAuthorized = user.hasGrantedScopes(GOOGLE_SCOPE);\n          debugger\n          return isAuthorized;\n      })\n    }\n  });\n}\n\nexport const beginGoogleAuthEpic = action$ => action$.pipe(\n  ofType(BEGIN_GOOGLE_AUTH),\n  mergeMap(() => from(loginGoogle()).pipe(\n    map((isAuthorized) => isAuthorized ? successGoogleAuth() : failGoogleAuth())\n  ))\n)\n"]},"metadata":{},"sourceType":"module"}
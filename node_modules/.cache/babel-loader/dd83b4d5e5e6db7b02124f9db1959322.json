{"ast":null,"code":"/**\n * this is the default rxdb-export\n * It has a batteries-included guarantee.\n * It basically just rxdb-core with some default plugins\n */\nimport Core from './core'; // default plugins\n\nimport SchemaCheckPlugin from './plugins/schema-check';\nCore.plugin(SchemaCheckPlugin);\nimport ErrorMessagesPlugin from './plugins/error-messages';\nCore.plugin(ErrorMessagesPlugin);\nimport ValidatePlugin from './plugins/validate';\nCore.plugin(ValidatePlugin);\nimport KeyCompressionPlugin from './plugins/key-compression';\nCore.plugin(KeyCompressionPlugin);\nimport LeaderElectionPlugin from './plugins/leader-election';\nCore.plugin(LeaderElectionPlugin);\nimport EncryptionPlugin from './plugins/encryption';\nCore.plugin(EncryptionPlugin);\nimport UpdatePlugin from './plugins/update';\nCore.plugin(UpdatePlugin);\nimport WatchForChangesPlugin from './plugins/watch-for-changes';\nCore.plugin(WatchForChangesPlugin);\nimport ReplicationPlugin from './plugins/replication';\nCore.plugin(ReplicationPlugin);\nimport AdapterCheckPlugin from './plugins/adapter-check';\nCore.plugin(AdapterCheckPlugin);\nimport JsonDumpPlugin from './plugins/json-dump';\nCore.plugin(JsonDumpPlugin);\nimport InMemoryPlugin from './plugins/in-memory';\nCore.plugin(InMemoryPlugin);\nimport AttachmentsPlugin from './plugins/attachments';\nCore.plugin(AttachmentsPlugin);\nimport LocalDocumentsPlugin from './plugins/local-documents';\nCore.plugin(LocalDocumentsPlugin);\n/**\n * create a database\n * @param  {string} prefix as databaseName for the storage (this can be the foldername)\n * @param  {Object} storageEngine any leveldown instance\n * @param  {String} password if the database contains encrypted fields\n * @param  {boolean} multiInstance if true, multiInstance-handling will be done\n * @return {Promise<Database>}\n */\n\nexport var create = Core.create;\n/**\n * removes the database and all its known data\n * @param  {string} databaseName\n * @param  {Object} adapter\n * @return {Promise}\n */\n\nexport var removeDatabase = Core.removeDatabase;\n/**\n * add a plugin for rxdb or pouchdb\n */\n\nexport var plugin = Core.plugin;\nexport var dbCount = Core.dbCount;\nexport var isRxDatabase = Core.isRxDatabase;\nexport var isRxCollection = Core.isRxCollection;\nexport var isRxDocument = Core.isRxDocument;\nexport var isRxQuery = Core.isRxQuery;\nexport var isRxSchema = Core.isRxSchema;\nexport var RxSchema = Core.RxSchema;\nexport var PouchDB = Core.PouchDB;\nexport var QueryChangeDetector = Core.QueryChangeDetector;\nexport var RxDatabase = Core.RxDatabase;\nexport var checkAdapter = Core.checkAdapter;\nexport default {\n  create: create,\n  checkAdapter: checkAdapter,\n  removeDatabase: removeDatabase,\n  plugin: plugin,\n  dbCount: dbCount,\n  isRxDatabase: isRxDatabase,\n  isRxCollection: isRxCollection,\n  isRxDocument: isRxDocument,\n  isRxQuery: isRxQuery,\n  isRxSchema: isRxSchema,\n  RxSchema: RxSchema,\n  PouchDB: PouchDB,\n  QueryChangeDetector: QueryChangeDetector,\n  RxDatabase: RxDatabase\n};","map":null,"metadata":{},"sourceType":"module"}
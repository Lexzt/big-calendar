{"ast":null,"code":"import _toConsumableArray from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _objectSpread from \"/Users/Sameenhaja/big-calendar/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/Sameenhaja/big-calendar/src/react-calendar-view.js\";\nimport React from \"react\";\nimport BigCalendar from \"react-big-calendar\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport moment from \"moment\";\nimport './react-calendar-view.css';\nimport { withRouter } from 'react-router-dom';\nimport 'react-big-calendar/lib/addons/dragAndDrop/styles.less';\nvar localizer = BigCalendar.momentLocalizer(moment);\nvar DragAndDropCalendar = withDragAndDrop(BigCalendar);\n\nvar rand = function rand() {\n  return Math.floor(Math.random() * 20) - 10;\n};\n\nvar modalStyle = {\n  position: 'fixed',\n  zIndex: 1040,\n  top: 0,\n  bottom: 0,\n  left: 0,\n  right: 0\n};\n\nvar backdropStyle = _objectSpread({}, modalStyle, {\n  zIndex: 'auto',\n  backgroundColor: '#000',\n  opacity: 0.5\n});\n\nvar dialogStyle = function dialogStyle() {\n  // we use some psuedo random coords so nested modals\n  // don't sit right on top of each other.\n  var top = 50 + rand();\n  var left = 50 + rand();\n  return {\n    position: 'absolute',\n    width: 400,\n    top: top + '%',\n    left: left + '%',\n    transform: \"translate(-\".concat(top, \"%, -\").concat(left, \"%)\"),\n    border: '1px solid #e5e5e5',\n    backgroundColor: 'white',\n    boxShadow: '0 5px 15px rgba(0,0,0,.5)',\n    padding: 20\n  };\n};\n\nvar ReactCalendarView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ReactCalendarView, _React$Component);\n\n  function ReactCalendarView(props) {\n    var _this;\n\n    _classCallCheck(this, ReactCalendarView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReactCalendarView).call(this, props));\n\n    _this.resizeEvent = function (resizeType, _ref) {\n      var event = _ref.event,\n          start = _ref.start,\n          end = _ref.end;\n      var events = _this.props.eventsList;\n      var nextEvents = events.map(function (existingEvent) {\n        return existingEvent.id === event.id ? _objectSpread({}, existingEvent, {\n          start: start,\n          end: end\n        }) : existingEvent;\n      });\n\n      _this.props.pushEventsFromResize(nextEvents);\n    };\n\n    _this.handleSelectDate = function (_ref2) {\n      var start = _ref2.start,\n          end = _ref2.end;\n\n      _this.props.history.push(\"/\".concat(start, \"/$\").concat(end));\n    };\n\n    _this.handleEventClick = function (_ref3) {\n      var event = _ref3.event;\n\n      _this.setState({\n        isShowEvent: true\n      });\n    };\n\n    _this.close = function () {\n      _this.setState({\n        isShowEvent: false\n      });\n    };\n\n    _this.state = {\n      events: [{\n        allDay: false,\n        end: new Date('December 10, 2018 11:13:00'),\n        start: new Date('December 09, 2018 12:13:00'),\n        title: 'hi'\n      }, {\n        allDay: true,\n        end: new Date('December 05, 2018 11:13:00'),\n        start: new Date('December 05, 2018 11:13:00'),\n        title: 'All Day Event'\n      }],\n      isShowEvent: false\n    };\n    _this.moveEvent = _this.moveEvent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ReactCalendarView, [{\n    key: \"moveEvent\",\n    value: function moveEvent(_ref4) {\n      var event = _ref4.event,\n          start = _ref4.start,\n          end = _ref4.end;\n      var events = this.props.eventsList;\n      var idx = events.indexOf(event);\n\n      var updatedEvent = _objectSpread({}, event, {\n        start: start,\n        end: end\n      });\n\n      var nextEvents = _toConsumableArray(events);\n\n      nextEvents.splice(idx, 1, updatedEvent);\n      this.props.pushEventsFromMove(nextEvents);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(DragAndDropCalendar, {\n        selectable: true,\n        localizer: localizer,\n        events: this.props.eventsList,\n        onEventDrop: this.moveEvent,\n        resizable: true,\n        onEventResize: this.resizeEvent,\n        defaultView: BigCalendar.Views.MONTH,\n        onSelectSlot: this.handleSelectDate,\n        onSelectEvent: this.handleEventClick,\n        popup: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(Modal, {\n        \"aria-labelledby\": \"modal-label\",\n        style: modalStyle,\n        backdropStyle: backdropStyle,\n        show: this.state.isShowEvent,\n        onHide: this.close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: dialogStyle(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        id: \"modal-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Text in a modal\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\"))));\n    }\n  }]);\n\n  return ReactCalendarView;\n}(React.Component);\n\nexport default withRouter(ReactCalendarView);","map":{"version":3,"sources":["/Users/Sameenhaja/big-calendar/src/react-calendar-view.js"],"names":["React","BigCalendar","withDragAndDrop","moment","withRouter","localizer","momentLocalizer","DragAndDropCalendar","rand","Math","floor","random","modalStyle","position","zIndex","top","bottom","left","right","backdropStyle","backgroundColor","opacity","dialogStyle","width","transform","border","boxShadow","padding","ReactCalendarView","props","resizeEvent","resizeType","event","start","end","events","eventsList","nextEvents","map","existingEvent","id","pushEventsFromResize","handleSelectDate","history","push","handleEventClick","setState","isShowEvent","close","state","allDay","Date","title","moveEvent","bind","idx","indexOf","updatedEvent","splice","pushEventsFromMove","Views","MONTH","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport BigCalendar from \"react-big-calendar\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport moment from \"moment\";\nimport './react-calendar-view.css';\nimport { withRouter } from 'react-router-dom';\nimport 'react-big-calendar/lib/addons/dragAndDrop/styles.less'\n\n\nconst localizer = BigCalendar.momentLocalizer(moment);\nconst DragAndDropCalendar = withDragAndDrop(BigCalendar);\n\nlet rand = ()=> (Math.floor(Math.random() * 20) - 10);\n\n\n\nconst modalStyle = {\n  position: 'fixed',\n  zIndex: 1040,\n  top: 0, bottom: 0, left: 0, right: 0\n};\n\nconst backdropStyle = {\n  ...modalStyle,\n  zIndex: 'auto',\n  backgroundColor: '#000',\n  opacity: 0.5\n};\n\nconst dialogStyle = function() {\n  // we use some psuedo random coords so nested modals\n  // don't sit right on top of each other.\n  let top = 50 + rand();\n  let left = 50 + rand();\n\n  return {\n    position: 'absolute',\n    width: 400,\n    top: top + '%', left: left + '%',\n    transform: `translate(-${top}%, -${left}%)`,\n    border: '1px solid #e5e5e5',\n    backgroundColor: 'white',\n    boxShadow: '0 5px 15px rgba(0,0,0,.5)',\n    padding: 20\n  };\n};\n\nclass ReactCalendarView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      events: [\n        {\n          allDay: false,\n          end: new Date('December 10, 2018 11:13:00'),\n          start: new Date('December 09, 2018 12:13:00'),\n          title: 'hi',\n        },\n        {\n          allDay: true,\n          end: new Date('December 05, 2018 11:13:00'),\n          start: new Date('December 05, 2018 11:13:00'),\n          title: 'All Day Event',\n        }\n      ],\n      isShowEvent: false\n    };\n\n    this.moveEvent = this.moveEvent.bind(this);\n  }\n\n  moveEvent({ event, start, end }) {\n      const events = this.props.eventsList;\n\n      const idx = events.indexOf(event);\n      const updatedEvent = { ...event, start, end };\n\n      const nextEvents = [...events];\n      nextEvents.splice(idx, 1, updatedEvent);\n\n\n      this.props.pushEventsFromMove(nextEvents);\n  }\n\n  resizeEvent = (resizeType, { event, start, end }) => {\n    const events = this.props.eventsList;\n\n    const nextEvents = events.map(existingEvent => {\n      return existingEvent.id === event.id\n        ? { ...existingEvent, start, end }\n        : existingEvent;\n    });\n\n    this.props.pushEventsFromResize(nextEvents);\n  };\n\n  handleSelectDate = ({ start, end }) => {\n    this.props.history.push(`/${start}/$${end}`);\n  }\n\n  handleEventClick = ({ event }) => {\n    this.setState({\n      isShowEvent: true\n    })\n  }\n\n  close = () => {\n    this.setState({\n      isShowEvent: false\n    })\n  }\n\n  render() {\n    return (\n      <div>\n      <DragAndDropCalendar\n        selectable\n        localizer={localizer}\n        events={this.props.eventsList}\n        onEventDrop={this.moveEvent}\n        resizable\n        onEventResize={this.resizeEvent}\n        defaultView={BigCalendar.Views.MONTH}\n        onSelectSlot={this.handleSelectDate}\n        onSelectEvent={this.handleEventClick}\n        popup\n      />\n\n      <Modal\n          aria-labelledby='modal-label'\n          style={modalStyle}\n          backdropStyle={backdropStyle}\n          show={this.state.isShowEvent}\n          onHide={this.close}\n        >\n        <div style={dialogStyle()} >\n          <h4 id='modal-label'>Text in a modal</h4>\n          <p>Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</p>\n        </div>\n      </Modal>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(ReactCalendarView);\n"]},"metadata":{},"sourceType":"module"}
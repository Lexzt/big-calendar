{"ast":null,"code":"import { API_KEY, GOOGLE_CLIENT_ID, GOOGLE_SCOPE } from '../utils/google';\nimport { successGoogleAuth, failGoogleAuth } from './actions/auth';\nvar GoogleAuth = '';\n\nvar handleAuthClick = function handleAuthClick(auth) {\n  if (auth.isSignedIn.get()) {\n    console.log(\"Signed In to Google!\");\n  } else {\n    auth.signIn();\n  }\n};\n\nvar loginGoogle = function loginGoogle() {\n  debugger;\n  window.gapi.load('client:auth2', {\n    callback: function callback() {\n      window.gapi.client.init({\n        'apiKey': API_KEY,\n        'clientId': GOOGLE_CLIENT_ID,\n        'scope': GOOGLE_SCOPE,\n        'discoveryDocs': ['https://www.googleapis.com/discovery/v1/apis/drive/v3/rest']\n      }).then(function () {\n        GoogleAuth = window.gapi.auth2.getAuthInstance(); //GoogleAuth.signIn();\n\n        handleAuthClick(GoogleAuth);\n        var user = GoogleAuth.currentUser.get();\n        var isAuthorized = user.hasGrantedScopes(GOOGLE_SCOPE);\n        return isAuthorized;\n      });\n    }\n  });\n};\n\nexport var beginGoogleAuthEpic = function beginGoogleAuthEpic(action$) {\n  return action$.pipe(ofType(BEGIN_GOOGLE_AUTH), map(function (user) {\n    return loginGoogle() ? successGoogleAuth(isAuthorized) : failGoogleAuth();\n  }));\n};","map":{"version":3,"sources":["/Users/sham/big-calendar/src/epics/auth.js"],"names":["API_KEY","GOOGLE_CLIENT_ID","GOOGLE_SCOPE","successGoogleAuth","failGoogleAuth","GoogleAuth","handleAuthClick","auth","isSignedIn","get","console","log","signIn","loginGoogle","window","gapi","load","callback","client","init","then","auth2","getAuthInstance","user","currentUser","isAuthorized","hasGrantedScopes","beginGoogleAuthEpic","action$","pipe","ofType","BEGIN_GOOGLE_AUTH","map"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,gBAAlB,EAAoCC,YAApC,QAAwD,iBAAxD;AACA,SACEC,iBADF,EAEEC,cAFF,QAGO,gBAHP;AAKA,IAAIC,UAAU,GAAG,EAAjB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD,EAAU;AAChC,MAAGA,IAAI,CAACC,UAAL,CAAgBC,GAAhB,EAAH,EAA0B;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,GAFD,MAGK;AACHJ,IAAAA,IAAI,CAACK,MAAL;AACD;AACF,CAPD;;AASA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC;AAC/BC,IAAAA,QAAQ,EAAE,oBAAM;AACdH,MAAAA,MAAM,CAACC,IAAP,CAAYG,MAAZ,CAAmBC,IAAnB,CAAwB;AACpB,kBAAUnB,OADU;AAEpB,oBAAYC,gBAFQ;AAGpB,iBAASC,YAHW;AAIpB,yBAAiB,CAAC,4DAAD;AAJG,OAAxB,EAKGkB,IALH,CAKQ,YAAM;AACVf,QAAAA,UAAU,GAAGS,MAAM,CAACC,IAAP,CAAYM,KAAZ,CAAkBC,eAAlB,EAAb,CADU,CAEV;;AACAhB,QAAAA,eAAe,CAACD,UAAD,CAAf;AACA,YAAMkB,IAAI,GAAGlB,UAAU,CAACmB,WAAX,CAAuBf,GAAvB,EAAb;AACA,YAAMgB,YAAY,GAAGF,IAAI,CAACG,gBAAL,CAAsBxB,YAAtB,CAArB;AACA,eAAOuB,YAAP;AACH,OAZD;AAaD;AAf8B,GAAjC;AAiBD,CAnBD;;AAqBA,OAAO,IAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,OAAO;AAAA,SAAIA,OAAO,CAACC,IAAR,CAC5CC,MAAM,CAACC,iBAAD,CADsC,EAE5CC,GAAG,CAAC,UAACT,IAAD;AAAA,WAAWV,WAAW,EAAZ,GAAkBV,iBAAiB,CAACsB,YAAD,CAAnC,GAAoDrB,cAAc,EAA5E;AAAA,GAAD,CAFyC,CAAJ;AAAA,CAAnC","sourcesContent":["import { API_KEY, GOOGLE_CLIENT_ID, GOOGLE_SCOPE } from '../utils/google';\nimport {\n  successGoogleAuth,\n  failGoogleAuth\n} from './actions/auth';\n\nlet GoogleAuth = '';\n\nconst handleAuthClick = (auth) => {\n  if(auth.isSignedIn.get()) {\n    console.log(\"Signed In to Google!\");\n  }\n  else {\n    auth.signIn();\n  }\n}\n\nconst loginGoogle = () => {\n  debugger\n  window.gapi.load('client:auth2', {\n    callback: () => {\n      window.gapi.client.init({\n          'apiKey': API_KEY,\n          'clientId': GOOGLE_CLIENT_ID,\n          'scope': GOOGLE_SCOPE,\n          'discoveryDocs': ['https://www.googleapis.com/discovery/v1/apis/drive/v3/rest'],\n      }).then(() => {\n          GoogleAuth = window.gapi.auth2.getAuthInstance();\n          //GoogleAuth.signIn();\n          handleAuthClick(GoogleAuth);\n          const user = GoogleAuth.currentUser.get();\n          const isAuthorized = user.hasGrantedScopes(GOOGLE_SCOPE);\n          return isAuthorized;\n      })\n    }\n  });\n}\n\nexport const beginGoogleAuthEpic = action$ => action$.pipe(\n  ofType(BEGIN_GOOGLE_AUTH),\n  map((user) => (loginGoogle()) ? successGoogleAuth(isAuthorized) : failGoogleAuth())\n)\n"]},"metadata":{},"sourceType":"module"}
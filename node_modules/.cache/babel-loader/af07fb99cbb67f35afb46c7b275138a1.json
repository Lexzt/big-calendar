{"ast":null,"code":"import _toConsumableArray from \"/Users/sham/big-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/sham/big-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/sham/big-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sham/big-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/sham/big-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sham/big-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sham/big-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sham/big-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sham/big-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sham/big-calendar/src/components/react-calendar-view.js\";\nimport React from \"react\";\nimport BigCalendar from \"react-big-calendar\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport moment from \"moment\";\nimport Modal from 'react-modal';\nimport './react-calendar-view.css';\nimport getDb from '../db';\nvar localizer = BigCalendar.momentLocalizer(moment);\nvar DragAndDropCalendar = withDragAndDrop(BigCalendar);\nvar customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\n\nvar ReactCalendarView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ReactCalendarView, _React$Component);\n\n  function ReactCalendarView(props) {\n    var _this;\n\n    _classCallCheck(this, ReactCalendarView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReactCalendarView).call(this, props));\n\n    _this.performSync = function (db) {\n      _this.initialSync(db).then(function (data) {\n        if (data.length > 0) {\n          _this.props.updateEvents(data);\n        }\n      });\n    };\n\n    _this.watchDb =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.initialSync =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(db) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                data = [];\n                _context2.next = 3;\n                return db.events.find().exec().then(function (events) {\n                  data = events.map(function (singleEvent) {\n                    return {\n                      id: singleEvent.id,\n                      end: singleEvent.end,\n                      start: singleEvent.start,\n                      summary: singleEvent.summary\n                    };\n                  });\n                });\n\n              case 3:\n                return _context2.abrupt(\"return\", data);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.authorizeOutLookCodeRequest = function () {} //return BASE_URL + PARAMS_URL;\n    // Calendar Event Functions\n    ;\n\n    _this.moveEventList = function (_ref3) {\n      var event = _ref3.event,\n          start = _ref3.start,\n          end = _ref3.end;\n      var events = _this.props.events;\n      var idx = events.indexOf(event);\n\n      var updatedEvent = _objectSpread({}, event, {\n        start: start,\n        end: end\n      });\n\n      var nextEvents = _toConsumableArray(events);\n\n      nextEvents.splice(idx, 1, updatedEvent);\n\n      _this.props.updateEvents(nextEvents);\n    };\n\n    _this.resizeEvent = function (resizeType, _ref4) {\n      var event = _ref4.event,\n          start = _ref4.start,\n          end = _ref4.end;\n      var events = _this.props.events;\n      var nextEvents = events.map(function (existingEvent) {\n        return existingEvent.id === event.id ? _objectSpread({}, existingEvent, {\n          start: start,\n          end: end\n        }) : existingEvent;\n      });\n\n      _this.props.updateEvents(nextEvents);\n    };\n\n    _this.handleSelectDate = function (_ref5) {\n      var start = _ref5.start,\n          end = _ref5.end;\n\n      _this.props.history.push(\"/\".concat(start, \"/$\").concat(end));\n    };\n\n    _this.handleEventClick = function (event) {\n      _this.setState({\n        isShowEvent: true,\n        currentEvent: event,\n        currentEventStartDateTime: moment(event.start).format(\"D, MMMM YYYY, h:mm a\"),\n        currentEventEndDateTime: moment(event.end).format(\"D, MMMM Do YYYY, h:mm a\")\n      });\n    };\n\n    _this.closeModal = function () {\n      _this.setState({\n        isShowEvent: false\n      });\n    };\n\n    _this.renderCalendar = function () {\n      return React.createElement(DragAndDropCalendar, {\n        selectable: true,\n        localizer: localizer,\n        events: _this.state.currentEvent,\n        views: {\n          month: true,\n          day: true\n        },\n        onEventDrop: _this.moveEventList,\n        onEventResize: _this.resizeEvent,\n        onSelectSlot: _this.handleSelectDate,\n        onSelectEvent: function onSelectEvent(event) {\n          return _this.handleEventClick(event);\n        },\n        popup: true,\n        resizable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      });\n    };\n\n    _this.renderEventPopup = function () {\n      return React.createElement(Modal, {\n        isOpen: _this.state.isShowEvent,\n        onAfterOpen: _this.afterOpenModal,\n        onRequestClose: _this.closeModal,\n        style: customStyles,\n        contentLabel: \"Event Modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        ref: function ref(subtitle) {\n          return _this.subtitle = subtitle;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, _this.state.currentEvent.title), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, _this.state.currentEventStartDateTime, \" - \", _this.state.currentEventEndDateTime), React.createElement(\"button\", {\n        onClick: _this.close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"close\"));\n    };\n\n    _this.renderSignupLinks = function () {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: _this.authorizeOutLookCodeRequest(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-block btn-social\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-outlook\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), \"Sign in with Outlook\")), React.createElement(\"button\", {\n        className: \"btn btn-block btn-social\",\n        onClick: function onClick() {\n          return _this.props.beginGetGoogleEvents();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-google\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), \"Get Google Events\"));\n    };\n\n    _this.state = {\n      currentEvent: {\n        allDay: false,\n        end: new Date('December 12, 2018 02:13:00'),\n        start: new Date('December 12, 2018 01:13:00'),\n        title: 'New Event'\n      },\n      isShowEvent: false,\n      currentEventStartDateTime: '',\n      currentEventEndDateTime: ''\n    };\n    return _this;\n  }\n\n  _createClass(ReactCalendarView, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      // For the modal third party library\n      Modal.setAppElement('body');\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var db;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return getDb();\n\n              case 2:\n                db = _context3.sent;\n                this.props.beginGoogleAuth();\n                db.events.insert$.subscribe(function (changeEvent) {\n                  return console.dir(changeEvent);\n                });\n\n                if (!this.props.initialSync) {\n                  this.performSync(db);\n                }\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, this.renderSignupLinks(), this.renderEventPopup(), this.renderCalendar());\n    }\n  }]);\n\n  return ReactCalendarView;\n}(React.Component);\n\nexport { ReactCalendarView as default };","map":{"version":3,"sources":["/Users/sham/big-calendar/src/components/react-calendar-view.js"],"names":["React","BigCalendar","withDragAndDrop","moment","Modal","getDb","localizer","momentLocalizer","DragAndDropCalendar","customStyles","content","top","left","right","bottom","marginRight","transform","ReactCalendarView","props","performSync","db","initialSync","then","data","length","updateEvents","watchDb","events","find","exec","map","singleEvent","id","end","start","summary","authorizeOutLookCodeRequest","moveEventList","event","idx","indexOf","updatedEvent","nextEvents","splice","resizeEvent","resizeType","existingEvent","handleSelectDate","history","push","handleEventClick","setState","isShowEvent","currentEvent","currentEventStartDateTime","format","currentEventEndDateTime","closeModal","renderCalendar","state","month","day","renderEventPopup","afterOpenModal","subtitle","title","close","renderSignupLinks","beginGetGoogleEvents","allDay","Date","setAppElement","beginGoogleAuth","insert$","subscribe","changeEvent","console","dir","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport BigCalendar from \"react-big-calendar\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport moment from \"moment\";\nimport Modal from 'react-modal';\nimport './react-calendar-view.css';\nimport getDb from '../db';\n\nconst localizer = BigCalendar.momentLocalizer(moment);\nconst DragAndDropCalendar = withDragAndDrop(BigCalendar);\n\nconst customStyles = {\n  content : {\n    top                   : '50%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)'\n  }\n};\n\nexport default class ReactCalendarView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentEvent: {\n        allDay: false,\n        end: new Date('December 12, 2018 02:13:00'),\n        start: new Date('December 12, 2018 01:13:00'),\n        title: 'New Event',\n\n      } ,\n      isShowEvent: false,\n      currentEventStartDateTime: '',\n      currentEventEndDateTime: ''\n    };\n  }\n\n  componentWillMount() {\n    // For the modal third party library\n    Modal.setAppElement('body');\n  }\n\n  async componentDidMount() {\n    const db = await getDb();\n    this.props.beginGoogleAuth();\n    db.events.insert$.subscribe(changeEvent => console.dir(changeEvent));\n    if(!this.props.initialSync) {\n      this.performSync(db);\n    }\n  }\n\n  performSync = (db) => {\n    this.initialSync(db).then((data) => {\n      if(data.length > 0) {\n        this.props.updateEvents(data);\n      }\n    });\n  }\n\n watchDb = async () => {\n\n }\n\n initialSync = async (db) => {\n    let data = [];\n    await db.events.find().exec().then(events => {\n        data = events.map(singleEvent => {\n          return {\n            id: singleEvent.id,\n            end: singleEvent.end,\n            start: singleEvent.start,\n            summary: singleEvent.summary,\n          }\n        });\n      });\n    return data;\n  }\n\n  // Outlook OAuth Functions\n\n  authorizeOutLookCodeRequest = () => {\n    //return BASE_URL + PARAMS_URL;\n  }\n\n\n  // Calendar Event Functions\n\n  moveEventList = ({ event, start, end }) => {\n      const events = this.props.events;\n\n      const idx = events.indexOf(event);\n      const updatedEvent = { ...event, start, end };\n\n      const nextEvents = [...events];\n      nextEvents.splice(idx, 1, updatedEvent);\n      this.props.updateEvents(nextEvents);\n  }\n\n  resizeEvent = (resizeType, { event, start, end }) => {\n    const events = this.props.events;\n\n    const nextEvents = events.map(existingEvent => {\n      return existingEvent.id === event.id\n        ? { ...existingEvent, start, end }\n        : existingEvent;\n    });\n    this.props.updateEvents(nextEvents);\n  }\n\n  handleSelectDate = ({ start, end }) => {\n    this.props.history.push(`/${start}/$${end}`);\n\n  }\n\n  handleEventClick = (event) => {\n    this.setState({\n      isShowEvent: true,\n      currentEvent: event,\n      currentEventStartDateTime: moment(event.start).format(\"D, MMMM YYYY, h:mm a\"),\n      currentEventEndDateTime: moment(event.end).format(\"D, MMMM Do YYYY, h:mm a\"),\n    })\n  }\n\n  closeModal = () => {\n    this.setState({\n      isShowEvent: false\n    })\n  }\n\n\n  /* Render functions */\n\n  renderCalendar = () => {\n    return (\n      <DragAndDropCalendar\n        selectable\n        localizer={localizer}\n        events={this.state.currentEvent}\n        views={{\n          month: true,\n          day: true,\n        }}\n        onEventDrop={this.moveEventList}\n        onEventResize={this.resizeEvent}\n        onSelectSlot={this.handleSelectDate}\n        onSelectEvent={(event) => this.handleEventClick(event)}\n        popup\n        resizable\n      />\n    )\n  }\n  renderEventPopup = () => {\n    return (\n      <Modal\n       isOpen={this.state.isShowEvent}\n       onAfterOpen={this.afterOpenModal}\n       onRequestClose={this.closeModal}\n       style={customStyles}\n       contentLabel=\"Event Modal\" >\n        <h2 ref={subtitle => this.subtitle = subtitle}>{this.state.currentEvent.title}</h2>\n        <h4>{this.state.currentEventStartDateTime} - {this.state.currentEventEndDateTime}</h4>\n        <button onClick={this.close}>close</button>\n      </Modal>\n    )\n  }\n\n  renderSignupLinks = () => {\n    return (\n      <div>\n         <a href={this.authorizeOutLookCodeRequest()}>\n          <button className=\"btn btn-block btn-social\">\n            <span className=\"fa fa-outlook\"></span>\n              Sign in with Outlook\n            </button>\n          </a>\n          <button className=\"btn btn-block btn-social\"\n                  onClick={() => this.props.beginGetGoogleEvents()}>\n            <span className=\"fa fa-google\"></span>\n              Get Google Events\n          </button>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <>\n      {this.renderSignupLinks()}\n      {this.renderEventPopup()}\n      {this.renderCalendar()}\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
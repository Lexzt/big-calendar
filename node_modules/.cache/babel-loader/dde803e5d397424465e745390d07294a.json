{"ast":null,"code":"import _readOnlyError from \"/Users/sham/big-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/readOnlyError\";\nimport { BEGIN_GET_GOOGLE_CALENDAR, successGetGoogleCalendar, failGetGoogleCalendar } from '../redux/actions';\nimport { switchMap, map, catchError } from 'rxjs/operators';\nimport { ofType } from 'redux-observable';\nimport { ajax } from 'rxjs/ajax';\nexport var getGoogleCalendarEpic = function getGoogleCalendarEpic(action$) {\n  return action$.pipe(ofType(BEGIN_GET_GOOGLE_CALENDAR), map(function () {\n    var token = '';\n    window.gapi.client.request({\n      'path': \"https://www.googleapis.com/calendar/v3/calendars/primary/events\"\n    }).then(function (resp) {\n      token = (_readOnlyError(\"token\"), resp.result.items);\n    }, function (reason) {\n      token = (_readOnlyError(\"token\"), reason);\n    });\n    debugger;\n    return successGetGoogleCalendar({});\n  }));\n};\n/*window.gapi.client.request({\n     'path': `https://www.googleapis.com/calendar/v3/calendars/primary/events`,\n   }).then(resp => {\n   let events = resp.result.items;\n   next({\n     type: action.type + '_SUCCESS',\n     payload: {\n       data: events\n     }\n   });\n }, (reason) => {\n   next({\n     type: action.type + '_FAILURE',\n     payload: {\n       data: reason\n     }\n   });\n });*/","map":{"version":3,"sources":["/Users/sham/big-calendar/src/epics/events.js"],"names":["BEGIN_GET_GOOGLE_CALENDAR","successGetGoogleCalendar","failGetGoogleCalendar","switchMap","map","catchError","ofType","ajax","getGoogleCalendarEpic","action$","pipe","token","window","gapi","client","request","then","resp","result","items","reason"],"mappings":";AAAA,SAASA,yBAAT,EACSC,wBADT,EAESC,qBAFT,QAEsC,kBAFtC;AAGA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,gBAA3C;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAAQC,IAAR,QAAmB,WAAnB;AAGA,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAC,OAAO;AAAA,SAAIA,OAAO,CAACC,IAAR,CAC9CJ,MAAM,CAACN,yBAAD,CADwC,EAE9CI,GAAG,CAAC,YAAM;AACR,QAAMO,KAAK,GAAG,EAAd;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYC,MAAZ,CAAmBC,OAAnB,CAA2B;AACzB;AADyB,KAA3B,EAEGC,IAFH,CAEQ,UAAAC,IAAI,EAAI;AAAEN,MAAAA,KAAK,6BAAGM,IAAI,CAACC,MAAL,CAAYC,KAAf,CAAL;AAA2B,KAF7C,EAGQ,UAAAC,MAAM,EAAI;AAAET,MAAAA,KAAK,6BAAGS,MAAH,CAAL;AAAgB,KAHpC;AAIA;AACA,WAAOnB,wBAAwB,CAAC,EAAD,CAA/B;AACD,GARE,CAF2C,CAAJ;AAAA,CAArC;AAaP","sourcesContent":["import { BEGIN_GET_GOOGLE_CALENDAR,\n         successGetGoogleCalendar,\n         failGetGoogleCalendar } from '../redux/actions';\nimport { switchMap, map, catchError } from 'rxjs/operators';\nimport { ofType } from 'redux-observable';\nimport {ajax} from 'rxjs/ajax';\n\n\nexport const getGoogleCalendarEpic = action$ => action$.pipe(\n  ofType(BEGIN_GET_GOOGLE_CALENDAR),\n  map(() => {\n    const token = '';\n    window.gapi.client.request({\n      'path': `https://www.googleapis.com/calendar/v3/calendars/primary/events`\n    }).then(resp => { token = resp.result.items },\n            reason => { token = reason })\n    debugger\n    return successGetGoogleCalendar({})\n  })\n);\n\n/*window.gapi.client.request({\n     'path': `https://www.googleapis.com/calendar/v3/calendars/primary/events`,\n   }).then(resp => {\n   let events = resp.result.items;\n   next({\n     type: action.type + '_SUCCESS',\n     payload: {\n       data: events\n     }\n   });\n }, (reason) => {\n   next({\n     type: action.type + '_FAILURE',\n     payload: {\n       data: reason\n     }\n   });\n });*/\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"/Users/sham/big-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sham/big-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/sham/big-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sham/big-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sham/big-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sham/big-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sham/big-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/sham/big-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/sham/big-calendar/src/components/event-form.js\";\nimport React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { FormControl } from 'react-bootstrap';\nimport moment from \"moment\";\nvar START_INDEX_OF_UTC_FORMAT = 17;\nvar START_INDEX_OF_HOUR = 11;\nvar END_INDEX_OF_HOUR = 13;\nvar TIME_OFFSET = 12;\nvar START_INDEX_OF_DATE = 0;\nvar END_INDEX_OF_DATE = 11;\nvar END_INDEX_OF_MINUTE = 16;\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Form).call(this, props));\n\n    _this.processStringForUTC = function (dateInString) {\n      var dateInStringInUTC;\n\n      if (dateInString.substring(START_INDEX_OF_UTC_FORMAT) === 'pm') {\n        var hourInString = parseInt(dateInString.substring(START_INDEX_OF_HOUR, END_INDEX_OF_HOUR), 10);\n        var hourInStringInUTC = hourInString + TIME_OFFSET;\n        console.log(hourInStringInUTC.toString());\n        dateInStringInUTC = dateInString.substring(START_INDEX_OF_DATE, END_INDEX_OF_DATE) + hourInStringInUTC.toString() + dateInString.substring(END_INDEX_OF_HOUR, END_INDEX_OF_MINUTE);\n      } else {\n        dateInStringInUTC = dateInString.substring(START_INDEX_OF_DATE, END_INDEX_OF_MINUTE);\n      }\n\n      return dateInStringInUTC;\n    };\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var db;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // need to write validation method\n                e.preventDefault();\n\n                _this.props.postGoogleEvent({\n                  'summary': _this.state.title,\n                  'start': {\n                    'dateTime': moment(_this.state.startParsed).format(),\n                    'timezone': 'America/Los_Angeles'\n                  },\n                  'end': {\n                    'dateTime': moment(_this.state.endParsed).format(),\n                    'timezone': 'America/Los_Angeles'\n                  }\n                });\n\n                _context.next = 4;\n                return getDb();\n\n              case 4:\n                db = _context.sent;\n                db.events.insert({\n                  'summary': _this.state.title,\n                  'start': {\n                    'dateTime': moment(_this.state.startParsed).format(),\n                    'timezone': 'America/Los_Angeles'\n                  },\n                  'end': {\n                    'dateTime': moment(_this.state.endParsed).format(),\n                    'timezone': 'America/Los_Angeles'\n                  }\n                });\n                console.dir(db);\n\n                _this.props.history.push('/');\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      title: '',\n      desc: '',\n      startParsed: '',\n      endParsed: '',\n      start: '',\n      end: ''\n    };\n    _this.handleTitleChange = _this.handleTitleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDescChange = _this.handleDescChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangeStartTime = _this.handleChangeStartTime.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangeEndTime = _this.handleChangeEndTime.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var startDateParsed = moment(this.props.match.params.start).format(\"YYYY-MM-DDThh:mm a\");\n      var endDateParsed = moment(this.props.match.params.end).format(\"YYYY-MM-DDThh:mm a\");\n      var startDateParsedInUTC = this.processStringForUTC(startDateParsed);\n      var endDateParsedInUTC = this.processStringForUTC(endDateParsed);\n      console.log(moment(startDateParsedInUTC).format() + \" \" + endDateParsedInUTC);\n      this.setState({\n        startParsed: startDateParsedInUTC,\n        endParsed: endDateParsedInUTC,\n        start: this.props.match.params.start,\n        end: this.props.match.params.end\n      });\n    }\n  }, {\n    key: \"handleTitleChange\",\n    value: function handleTitleChange(e) {\n      this.setState({\n        title: e.target.value\n      });\n    }\n  }, {\n    key: \"handleDescChange\",\n    value: function handleDescChange(e) {\n      this.setState({\n        desc: e.target.value\n      });\n    }\n  }, {\n    key: \"handleChangeStartTime\",\n    value: function handleChangeStartTime(e) {\n      this.setState({\n        startParsed: e.target.value\n      });\n    }\n  }, {\n    key: \"handleChangeEndTime\",\n    value: function handleChangeEndTime(e) {\n      this.setState({\n        endParsed: e.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"form-event-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"container\",\n        onSubmit: this.handleSubmit,\n        noValidate: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        type: \"text\",\n        value: this.state.value,\n        placeholder: \"Enter title of Event\",\n        onChange: this.handleTitleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(FormControl, {\n        componentClass: \"textarea\",\n        placeholder: \"Description\",\n        onChange: this.handleDescChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"datetime-local\",\n        label: \"Start\",\n        type: \"datetime-local\",\n        defaultValue: this.state.startParsed,\n        className: \"textField\",\n        InputLabelProps: {\n          shrink: true\n        },\n        onChange: this.handleChangeStartTime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"datetime-local\",\n        label: \"End\",\n        type: \"datetime-local\",\n        defaultValue: this.state.endParsed,\n        className: \"textField\",\n        InputLabelProps: {\n          shrink: true\n        },\n        onChange: this.handleChangeEndTime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Form;\n}(Component);\n\nexport { Form as default };","map":{"version":3,"sources":["/Users/sham/big-calendar/src/components/event-form.js"],"names":["React","Component","TextField","FormControl","moment","START_INDEX_OF_UTC_FORMAT","START_INDEX_OF_HOUR","END_INDEX_OF_HOUR","TIME_OFFSET","START_INDEX_OF_DATE","END_INDEX_OF_DATE","END_INDEX_OF_MINUTE","Form","props","processStringForUTC","dateInString","dateInStringInUTC","substring","hourInString","parseInt","hourInStringInUTC","console","log","toString","handleSubmit","e","preventDefault","postGoogleEvent","state","title","startParsed","format","endParsed","getDb","db","events","insert","dir","history","push","desc","start","end","handleTitleChange","bind","handleDescChange","handleChangeStartTime","handleChangeEndTime","startDateParsed","match","params","endDateParsed","startDateParsedInUTC","endDateParsedInUTC","setState","target","value","shrink"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { FormControl } from 'react-bootstrap';\nimport moment from \"moment\";\n\nconst START_INDEX_OF_UTC_FORMAT = 17;\nconst START_INDEX_OF_HOUR = 11;\nconst END_INDEX_OF_HOUR = 13;\nconst TIME_OFFSET = 12;\nconst START_INDEX_OF_DATE = 0;\nconst END_INDEX_OF_DATE = 11;\nconst END_INDEX_OF_MINUTE = 16;\n\nexport default class Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: '',\n      desc: '',\n      startParsed: '',\n      endParsed: '',\n      start: '',\n      end: ''\n    };\n\n    this.handleTitleChange = this.handleTitleChange.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleChangeStartTime = this.handleChangeStartTime.bind(this);\n    this.handleChangeEndTime = this.handleChangeEndTime.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  processStringForUTC = (dateInString) => {\n    let dateInStringInUTC;\n    if(dateInString.substring(START_INDEX_OF_UTC_FORMAT) === 'pm') {\n        const hourInString = parseInt(dateInString.substring(START_INDEX_OF_HOUR, END_INDEX_OF_HOUR), 10);\n        const hourInStringInUTC = hourInString + TIME_OFFSET;\n        console.log(hourInStringInUTC.toString());\n        dateInStringInUTC = dateInString.substring(START_INDEX_OF_DATE, END_INDEX_OF_DATE)\n                                      + hourInStringInUTC.toString()\n                                      + dateInString.substring(END_INDEX_OF_HOUR, END_INDEX_OF_MINUTE);\n    }\n    else {\n        dateInStringInUTC = dateInString.substring(START_INDEX_OF_DATE, END_INDEX_OF_MINUTE);\n    }\n    return dateInStringInUTC;\n  }\n\n  componentWillMount() {\n    const startDateParsed = moment(this.props.match.params.start).format(\"YYYY-MM-DDThh:mm a\")\n    const endDateParsed = moment(this.props.match.params.end).format(\"YYYY-MM-DDThh:mm a\");\n    const startDateParsedInUTC = this.processStringForUTC(startDateParsed);\n    const endDateParsedInUTC = this.processStringForUTC(endDateParsed);\n    console.log(moment(startDateParsedInUTC).format() + \" \" + endDateParsedInUTC);\n    this.setState({\n      startParsed: startDateParsedInUTC,\n      endParsed: endDateParsedInUTC,\n      start: this.props.match.params.start,\n      end: this.props.match.params.end\n    })\n  }\n\n  handleTitleChange(e) {\n    this.setState({ title: e.target.value });\n  }\n\n  handleDescChange(e) {\n    this.setState({ desc: e.target.value });\n  }\n\n  handleChangeStartTime(e) {\n    this.setState({ startParsed: e.target.value });\n  }\n\n  handleChangeEndTime(e) {\n    this.setState({ endParsed: e.target.value });\n  }\n\n  handleSubmit = async (e) => {\n    // need to write validation method\n    e.preventDefault();\n    this.props.postGoogleEvent({\n      'summary': this.state.title,\n      'start': {\n        'dateTime' : moment(this.state.startParsed).format(),\n        'timezone' : 'America/Los_Angeles'\n      },\n      'end': {\n        'dateTime' : moment(this.state.endParsed).format(),\n        'timezone' : 'America/Los_Angeles'\n      }\n\n    })\n    const db = await getDb();\n    db.events.insert({\n      'summary': this.state.title,\n      'start': {\n        'dateTime' : moment(this.state.startParsed).format(),\n        'timezone' : 'America/Los_Angeles'\n      },\n      'end': {\n        'dateTime' : moment(this.state.endParsed).format(),\n        'timezone' : 'America/Los_Angeles'\n      }\n\n    });\n    console.dir(db);\n\n    this.props.history.push('/');\n  }\n\n  render() {\n    return (\n      <div className=\"form-event-container\">\n      <form className=\"container\" onSubmit={this.handleSubmit} noValidate>\n\n        {/* Title Form*/}\n        <FormControl\n          type=\"text\"\n          value={this.state.value}\n          placeholder=\"Enter title of Event\"\n          onChange={this.handleTitleChange}\n        />\n\n        {/* Text Area */}\n        <FormControl\n          componentClass=\"textarea\"\n          placeholder=\"Description\"\n          onChange={this.handleDescChange}\n        />\n\n        {/* Start Time and Date */}\n        <TextField\n          id=\"datetime-local\"\n          label=\"Start\"\n          type=\"datetime-local\"\n          defaultValue={this.state.startParsed}\n          className=\"textField\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={this.handleChangeStartTime}\n        />\n\n        {/* End Time and Date */}\n        <TextField\n          id=\"datetime-local\"\n          label=\"End\"\n          type=\"datetime-local\"\n          defaultValue={this.state.endParsed}\n          className=\"textField\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={this.handleChangeEndTime}\n        />\n\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n      </div>\n\n\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"/Users/sham/big-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sham/big-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { createLogger } from 'redux-logger';\nimport getDb from '../db';\nexport var loggerMiddleware = createLogger();\n\nvar MicrosoftGraph = require(\"@microsoft/microsoft-graph-client\");\n\nvar GOOGLE_CLIENT_ID = '65724758895-gc7lubjkjsqqddfhlb7jcme80i3mjqn0.apps.googleusercontent.com';\nvar API_KEY = 'AIzaSyCTYXWtoRKnXeZkPCcZwYOXm0Qz3Lz9F9g';\nvar GOOGLE_SCOPE = \"https://www.googleapis.com/auth/calendar.events\";\nvar OUTLOOK_CLIENT_ID = '6b770a68-2156-4345-b0aa-d95419e31be1';\nvar BASE_URL = 'https://login.microsoftonline.com/common/oauth2/v2.0/authorize?';\nvar GoogleAuth;\n\nfunction outlookCalendarEvents() {\n  return MicrosoftGraph.Client.init({\n    authProvider: function authProvider(done) {\n      done(null, window.localStorage.getItem('at'));\n    }\n  }).api('/me/events').top(10).select('subject,start,end,createdDatetime').orderby('createdDatetime DESC').get(function (err, res) {\n    if (err) {\n      return err;\n    } else {\n      return res.value;\n    }\n  });\n}\n\nfunction handleAuthClick(auth) {\n  if (auth.isSignedIn.get()) {\n    console.log(\"Signed In to Google!\");\n  } else {\n    auth.signIn();\n  }\n}\n\nfunction fetchEvents(request) {\n  request.execute(function (resp) {\n    debugger;\n    return resp;\n  }, function (error) {\n    return error;\n  });\n}\n\nexport var apiMiddleware = function apiMiddleware(store) {\n  return function (next) {\n    return function (action) {\n      if (action.type === 'BEGIN_GOOGLE_AUTH') {\n        window.gapi.load('client:auth2', {\n          callback: function callback() {\n            window.gapi.client.init({\n              'apiKey': API_KEY,\n              'clientId': GOOGLE_CLIENT_ID,\n              'scope': GOOGLE_SCOPE,\n              'discoveryDocs': ['https://www.googleapis.com/discovery/v1/apis/drive/v3/rest']\n            }).then(function () {\n              GoogleAuth = window.gapi.auth2.getAuthInstance(); //GoogleAuth.signIn();\n\n              handleAuthClick(GoogleAuth);\n              var user = GoogleAuth.currentUser.get();\n              var isAuthorized = user.hasGrantedScopes(GOOGLE_SCOPE);\n\n              if (isAuthorized) {\n                next({\n                  type: 'SUCCESS_GOOGLE_AUTH',\n                  payload: {\n                    user: user\n                  }\n                });\n              }\n            });\n          }\n        });\n      }\n\n      if (action.type === 'BEGIN_GET_GOOGLE_EVENTS') {\n        window.gapi.client.load('calendar', 'v3', function () {\n          var syncToken = localStorage.getItem('sync');\n\n          if (syncToken == null) {\n            console.log(\"Performing full sync\");\n          } else {\n            console.log(\"Performing incremental sync\");\n            var request = window.gapi.client.calendar.events.list({\n              'calendarId': 'primary',\n              'showDeleted': false,\n              'singleEvents': true,\n              'orderBy': 'startTime',\n              'syncToken': syncToken\n            });\n          }\n\n          var pageToken = null;\n          var result = null;\n\n          do {\n            var request = window.gapi.client.calendar.events.list({\n              'calendarId': 'primary',\n              'showDeleted': false,\n              'singleEvents': true,\n              'maxResults': 10,\n              'orderBy': 'startTime',\n              'pageToken': pageToken\n            });\n\n            try {\n              window.gapi.client.request({\n                'path': \"https://www.googleapis.com/calendar/v3/calendars/primary/events\"\n              }).then(function (resp) {\n                result = resp;\n              });\n            } catch (error) {\n              if (error.getStatusCode() == 410) {\n                console.log('Invalid sync token, clearing event store and re-syncing');\n                localStorage.removeItem('sync');\n              } else {\n                console.log(error);\n              }\n            }\n\n            pageToken = result.nextPageToken();\n            console.log(pageToken);\n          } while (pageToken != null);\n\n          localStorage.setItem('sync', result.nextSyncToken());\n        });\n        /*window.gapi.client.request({\n             'path': `https://www.googleapis.com/calendar/v3/calendars/primary/events`,\n           }).then(resp => {\n           let nextPageToken = resp.result.nextPageToken;\n           let events = resp.result.items;\n           next({\n             type: 'NEXT_GET_GOOGLE_EVENTS',\n             payload: {\n               nextPageToken: nextPageToken\n             }\n           });\n         }, (reason) => {\n           next({\n             type: action.type + '_FAILURE',\n             payload: {\n               data: reason\n             }\n           });\n         });*/\n      }\n\n      if (action.type === 'NEXT_GET_GOOGLE_EVENTS') {}\n\n      if (action.type === 'LAST_GET_GOOGLE_EVENTS') {}\n\n      if (action.type === 'POST_GOOGLE_EVENT') {\n        var calendarObject = {\n          'calendarId': 'primary',\n          'resource': action.payload.event\n        }; //deprecated function: take note\n\n        window.gapi.client.load('calendar', 'v3', function () {\n          var request = window.gapi.client.calendar.events.insert(calendarObject);\n          request.execute(function (resp) {\n            next({\n              type: action.type + '_SUCCESS',\n              payload: {\n                data: resp\n              }\n            });\n          });\n        });\n      }\n\n      if (action.type === 'GET_OUTLOOK_EVENTS') {\n        var value = outlookCalendarEvents();\n        next({\n          type: action.type + '_SUCCESS',\n          payload: {\n            data: value\n          }\n        });\n      }\n\n      return next(action);\n    };\n  };\n};\n\nvar saveEvents =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(events) {\n    var db, dbEvents;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return getDb();\n\n          case 2:\n            db = _context.sent;\n            dbEvents = []; //need to preprocess data\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function saveEvents(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport var dbMiddleware = function dbMiddleware(store) {\n  return function (next) {\n    return function (action) {\n      if (action.type === 'GET_GOOGLE_EVENTS_SUCCESS') {\n        debugger;\n        saveEvents(action.payload);\n      }\n\n      if (action.type === 'POST_GOOGLE_EVENT_SUCCESS') {\n        saveEvents(action.payload);\n      }\n\n      return next(action);\n    };\n  };\n};","map":{"version":3,"sources":["/Users/sham/big-calendar/src/redux/middleware.js"],"names":["createLogger","getDb","loggerMiddleware","MicrosoftGraph","require","GOOGLE_CLIENT_ID","API_KEY","GOOGLE_SCOPE","OUTLOOK_CLIENT_ID","BASE_URL","GoogleAuth","outlookCalendarEvents","Client","init","authProvider","done","window","localStorage","getItem","api","top","select","orderby","get","err","res","value","handleAuthClick","auth","isSignedIn","console","log","signIn","fetchEvents","request","execute","resp","error","apiMiddleware","store","next","action","type","gapi","load","callback","client","then","auth2","getAuthInstance","user","currentUser","isAuthorized","hasGrantedScopes","payload","syncToken","calendar","events","list","pageToken","result","getStatusCode","removeItem","nextPageToken","setItem","nextSyncToken","calendarObject","event","insert","data","saveEvents","db","dbEvents","dbMiddleware"],"mappings":"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","sourcesContent":["import { createLogger } from 'redux-logger';\nimport getDb from '../db';\n\nexport const loggerMiddleware = createLogger();\n\n\nconst MicrosoftGraph = require(\"@microsoft/microsoft-graph-client\");\n\nconst GOOGLE_CLIENT_ID = '65724758895-gc7lubjkjsqqddfhlb7jcme80i3mjqn0.apps.googleusercontent.com';\nconst API_KEY = 'AIzaSyCTYXWtoRKnXeZkPCcZwYOXm0Qz3Lz9F9g';\nconst GOOGLE_SCOPE = `https://www.googleapis.com/auth/calendar.events`;\nconst OUTLOOK_CLIENT_ID = '6b770a68-2156-4345-b0aa-d95419e31be1';\nconst BASE_URL = 'https://login.microsoftonline.com/common/oauth2/v2.0/authorize?';\nlet GoogleAuth;\n\nfunction outlookCalendarEvents() {\n  return MicrosoftGraph.Client.init({\n    authProvider: (done) => {\n      done(null, window.localStorage.getItem('at'))\n    }\n  }).api('/me/events')\n    .top(10)\n    .select('subject,start,end,createdDatetime')\n    .orderby('createdDatetime DESC')\n    .get((err, res) => {\n      if (err) {\n        return err;\n      } else {\n        return res.value;\n      }\n    });\n}\n\nfunction handleAuthClick(auth) {\n  if(auth.isSignedIn.get()) {\n    console.log(\"Signed In to Google!\");\n  }\n  else {\n    auth.signIn();\n  }\n}\n\nfunction fetchEvents(request) {\n  request.execute(function(resp) {\n    debugger\n    return resp\n  }, function(error) {\n    return error\n  })\n}\n\nexport const apiMiddleware = store => next => action => {\n  if(action.type === 'BEGIN_GOOGLE_AUTH') {\n    window.gapi.load('client:auth2', {\n      callback: () => {\n        window.gapi.client.init({\n            'apiKey': API_KEY,\n            'clientId': GOOGLE_CLIENT_ID,\n            'scope': GOOGLE_SCOPE,\n            'discoveryDocs': ['https://www.googleapis.com/discovery/v1/apis/drive/v3/rest'],\n        }).then(() => {\n            GoogleAuth = window.gapi.auth2.getAuthInstance();\n            //GoogleAuth.signIn();\n            handleAuthClick(GoogleAuth);\n            const user = GoogleAuth.currentUser.get();\n            const isAuthorized = user.hasGrantedScopes(GOOGLE_SCOPE);\n            if(isAuthorized) {\n              next({\n                type: 'SUCCESS_GOOGLE_AUTH',\n                payload: {\n                  user\n                }\n              })\n            }\n        })\n      }\n    });\n  }\n\n  if(action.type === 'BEGIN_GET_GOOGLE_EVENTS') {\n    window.gapi.client.load('calendar', 'v3', function() {\n      let syncToken = localStorage.getItem('sync');\n      if(syncToken == null) {\n        console.log(\"Performing full sync\");\n      } else {\n        console.log(\"Performing incremental sync\");\n        var request = window.gapi.client.calendar.events.list({\n          'calendarId' : 'primary',\n          'showDeleted': false,\n          'singleEvents': true,\n          'orderBy': 'startTime',\n          'syncToken': syncToken\n        });\n      }\n      let pageToken = null;\n      let result = null;\n\n      do {\n        var request = window.gapi.client.calendar.events.list({\n          'calendarId' : 'primary',\n          'showDeleted': false,\n          'singleEvents': true,\n          'maxResults': 10,\n          'orderBy': 'startTime',\n          'pageToken': pageToken\n        });\n\n        try {\n          window.gapi.client.request({\n               'path': `https://www.googleapis.com/calendar/v3/calendars/primary/events`,\n          }).then(resp => {\n            result = resp;\n          })\n        }\n        catch (error) {\n          if(error.getStatusCode() == 410) {\n            console.log('Invalid sync token, clearing event store and re-syncing');\n            localStorage.removeItem('sync');\n          }\n          else {\n            console.log(error);\n          }\n        }\n        pageToken = result.nextPageToken();\n        console.log(pageToken);\n      } while (pageToken != null);\n      localStorage.setItem('sync', result.nextSyncToken());\n\n    })\n\n      /*window.gapi.client.request({\n           'path': `https://www.googleapis.com/calendar/v3/calendars/primary/events`,\n         }).then(resp => {\n         let nextPageToken = resp.result.nextPageToken;\n         let events = resp.result.items;\n         next({\n           type: 'NEXT_GET_GOOGLE_EVENTS',\n           payload: {\n             nextPageToken: nextPageToken\n           }\n         });\n       }, (reason) => {\n         next({\n           type: action.type + '_FAILURE',\n           payload: {\n             data: reason\n           }\n         });\n       });*/\n  }\n\n  if(action.type === 'NEXT_GET_GOOGLE_EVENTS') {\n\n  }\n\n  if(action.type === 'LAST_GET_GOOGLE_EVENTS') {\n\n  }\n\n  if(action.type === 'POST_GOOGLE_EVENT') {\n    var calendarObject =\n    {\n        'calendarId': 'primary',\n        'resource': action.payload.event\n    };\n\n    //deprecated function: take note\n    window.gapi.client.load('calendar', 'v3', function() {\n      var request = window.gapi.client.calendar.events.insert(calendarObject);\n      request.execute(function(resp) {\n          next({\n            type: action.type + '_SUCCESS',\n            payload: {\n              data: resp\n            }\n          })\n      });\n    })\n  }\n  if(action.type === 'GET_OUTLOOK_EVENTS') {\n    const value = outlookCalendarEvents();\n    next({\n      type: action.type + '_SUCCESS',\n      payload: {\n        data: value\n      }\n    })\n  }\n  return next(action);\n}\n\nconst saveEvents = async events => {\n  const db = await getDb();\n  const dbEvents = [];\n  //need to preprocess data\n}\n\n\nexport const dbMiddleware = store => next => action => {\n  if(action.type === 'GET_GOOGLE_EVENTS_SUCCESS') {\n    debugger\n    saveEvents(action.payload);\n  }\n  if(action.type === 'POST_GOOGLE_EVENT_SUCCESS') {\n    saveEvents(action.payload);\n  }\n  return next(action);\n}\n"]},"metadata":{},"sourceType":"module"}
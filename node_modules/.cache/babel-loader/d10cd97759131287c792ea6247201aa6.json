{"ast":null,"code":"var _this = this;\n\nimport { createLogger } from 'redux-logger';\nexport var loggerMiddleware = createLogger();\n\nvar MicrosoftGraph = require(\"@microsoft/microsoft-graph-client\");\n\nfunction outlookCalendarEvents() {\n  return MicrosoftGraph.Client.init({\n    authProvider: function authProvider(done) {\n      done(null, window.localStorage.getItem('at'));\n    }\n  }).api('/me/events').top(10).select('subject,start,end,createdDatetime').orderby('createdDatetime DESC').get(function (err, res) {\n    if (err) {\n      return err;\n    } else {\n      return res.value;\n    }\n  });\n}\n\nvar handleGoogleClientLoad = function handleGoogleClientLoad() {\n  window.gapi.load('client:auth2', _this.initClient);\n};\n\nvar initClient = function initClient() {\n  window.gapi.client.init({\n    'apiKey': API_KEY,\n    'clientId': GOOGLE_CLIENT_ID,\n    'scope': GOOGLE_SCOPE,\n    'discoveryDocs': ['https://www.googleapis.com/discovery/v1/apis/drive/v3/rest']\n  }).then(function () {\n    var GoogleAuth = window.gapi.auth2.getAuthInstance();\n    var user = GoogleAuth.currentUser.get();\n    var isAuthorized = user.hasGrantedScopes(GOOGLE_SCOPE);\n    return isAuthorized;\n  });\n};\n\nexport var apiMiddleware = function apiMiddleware(store) {\n  return function (next) {\n    return function (action) {\n      if (action.type === 'BEGIN_GOOGLE_AUTH') {\n        window.gapi.load('client:auth2', _initClient);\n\n        var _initClient = function _initClient() {\n          window.gapi.client.init({\n            'apiKey': API_KEY,\n            'clientId': GOOGLE_CLIENT_ID,\n            'scope': GOOGLE_SCOPE,\n            'discoveryDocs': ['https://www.googleapis.com/discovery/v1/apis/drive/v3/rest']\n          }).then(function () {\n            var GoogleAuth = window.gapi.auth2.getAuthInstance();\n            var user = GoogleAuth.currentUser.get();\n            var isAuthorized = user.hasGrantedScopes(GOOGLE_SCOPE);\n\n            if (isAuthorized) {\n              next(successGoogleAuth(user));\n            }\n          });\n        };\n      }\n\n      if (action.type === 'GET_GOOGLE_EVENTS') {\n        window.gapi.client.request({\n          'path': \"https://www.googleapis.com/calendar/v3/calendars/primary/events\"\n        }).then(function (resp) {\n          debugger;\n          var events = resp.result.items;\n          next({\n            type: action.type + '_SUCCESS',\n            payload: {\n              data: events\n            }\n          });\n        }, function (reason) {\n          next({\n            type: action.type + '_FAILURE',\n            payload: {\n              data: reason\n            }\n          });\n        });\n      }\n\n      if (action.type === 'GET_OUTLOOK_EVENTS') {\n        var value = outlookCalendarEvents();\n        next({\n          type: action.type + '_SUCCESS',\n          payload: {\n            data: value\n          }\n        });\n      }\n\n      return next(action);\n    };\n  };\n};","map":{"version":3,"sources":["/Users/sham/big-calendar/src/redux/middleware.js"],"names":["createLogger","loggerMiddleware","MicrosoftGraph","require","outlookCalendarEvents","Client","init","authProvider","done","window","localStorage","getItem","api","top","select","orderby","get","err","res","value","handleGoogleClientLoad","gapi","load","initClient","client","API_KEY","GOOGLE_CLIENT_ID","GOOGLE_SCOPE","then","GoogleAuth","auth2","getAuthInstance","user","currentUser","isAuthorized","hasGrantedScopes","apiMiddleware","store","next","action","type","successGoogleAuth","request","resp","events","result","items","payload","data","reason"],"mappings":"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","sourcesContent":["import { createLogger } from 'redux-logger';\nexport const loggerMiddleware = createLogger();\n\nconst MicrosoftGraph = require(\"@microsoft/microsoft-graph-client\");\n\nfunction outlookCalendarEvents() {\n  return MicrosoftGraph.Client.init({\n    authProvider: (done) => {\n      done(null, window.localStorage.getItem('at'))\n    }\n  }).api('/me/events')\n    .top(10)\n    .select('subject,start,end,createdDatetime')\n    .orderby('createdDatetime DESC')\n    .get((err, res) => {\n      if (err) {\n        return err;\n      } else {\n        return res.value;\n      }\n    });\n}\n\nconst handleGoogleClientLoad = () => {\n  window.gapi.load('client:auth2', this.initClient);\n}\n\nconst initClient = () => {\n  window.gapi.client.init({\n      'apiKey': API_KEY,\n      'clientId': GOOGLE_CLIENT_ID,\n      'scope': GOOGLE_SCOPE,\n      'discoveryDocs': ['https://www.googleapis.com/discovery/v1/apis/drive/v3/rest'],\n  }).then( () => {\n      const GoogleAuth = window.gapi.auth2.getAuthInstance();\n      var user = GoogleAuth.currentUser.get();\n      var isAuthorized = user.hasGrantedScopes(GOOGLE_SCOPE);\n      return isAuthorized;\n  })\n}\n\n\nexport const apiMiddleware = store => next => action => {\n  if(action.type === 'BEGIN_GOOGLE_AUTH') {\n    window.gapi.load('client:auth2', initClient);\n    const initClient = () => {\n      window.gapi.client.init({\n          'apiKey': API_KEY,\n          'clientId': GOOGLE_CLIENT_ID,\n          'scope': GOOGLE_SCOPE,\n          'discoveryDocs': ['https://www.googleapis.com/discovery/v1/apis/drive/v3/rest'],\n      }).then( () => {\n          const GoogleAuth = window.gapi.auth2.getAuthInstance();\n          const user = GoogleAuth.currentUser.get();\n          const isAuthorized = user.hasGrantedScopes(GOOGLE_SCOPE);\n          if(isAuthorized) {\n            next(successGoogleAuth(user))\n          }\n      })\n    }\n  }\n  if(action.type === 'GET_GOOGLE_EVENTS') {\n    window.gapi.client.request({\n         'path': `https://www.googleapis.com/calendar/v3/calendars/primary/events`,\n       }).then(resp => {\n         debugger\n       let events = resp.result.items;\n       next({\n         type: action.type + '_SUCCESS',\n         payload: {\n           data: events\n         }\n       });\n     }, (reason) => {\n       next({\n         type: action.type + '_FAILURE',\n         payload: {\n           data: reason\n         }\n       });\n     });\n  }\n  if(action.type === 'GET_OUTLOOK_EVENTS') {\n    const value = outlookCalendarEvents();\n    next({\n      type: action.type + '_SUCCESS',\n      payload: {\n        data: value\n      }\n    })\n  }\n  return next(action);\n}\n"]},"metadata":{},"sourceType":"module"}